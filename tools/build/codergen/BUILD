load("//tools/build:rules.bzl", "codergen", "cc_copts", "cc_defines")

_JAVA_FILES = [
        "gapic/src/service/com/google/gapid/service/atom/Range.java",
        "gapic/src/service/com/google/gapid/service/atom/AtomGroup.java",
        "gapic/src/service/com/google/gapid/service/atom/Aborted.java",
        "gapic/src/service/com/google/gapid/service/atom/Factory.java",
        "gapic/src/service/com/google/gapid/service/atom/AtomList.java",
        "gapic/src/service/com/google/gapid/service/atom/AtomMetadata.java",
        "gapic/src/service/com/google/gapid/service/atom/Observation.java",
        "gapic/src/service/com/google/gapid/service/atom/Resource.java",
        "gapic/src/service/com/google/gapid/service/memory/Factory.java",
        "gapic/src/service/com/google/gapid/service/memory/MemorySliceMetadata.java",
        "gapic/src/service/com/google/gapid/service/memory/MemoryPointer.java",
        "gapic/src/service/com/google/gapid/service/atom/Observations.java",
        "gapic/src/service/com/google/gapid/service/memory/MemoryRange.java",
        "gapic/src/service/com/google/gapid/service/memory/MemorySliceInfo.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/BoolSlice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Float32.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Bool.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Float64.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Float32Slice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Id.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Float64Slice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/IdSlice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Int16.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Int64.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Int32.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Int16Slice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Int32Slice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Int8.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Int64Slice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/ObjectBox.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/StringSlice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/ObjectSlice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Int8Slice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Uint32.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/StringBox.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Uint16.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Uint16Slice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Uint64.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Uint64Slice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Uint8Slice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Factory.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Uint32Slice.java",
        "gapic/src/rpclib/com/google/gapid/rpclib/any/Uint8.java",
        "gapic/src/service/com/google/gapid/service/snippets/CanFollow.java",
        "gapic/src/service/com/google/gapid/service/snippets/FieldPath.java",
        "gapic/src/service/com/google/gapid/service/snippets/Observations.java",
        "gapic/src/service/com/google/gapid/service/snippets/Factory.java",
        "gapic/src/service/com/google/gapid/service/snippets/RelativePath.java",
        "gapic/src/service/com/google/gapid/service/snippets/Labels.java",
        "gapic/src/service/com/google/gapid/service/snippets/PartPath.java",
        "gapic/src/service/com/google/gapid/service/snippets/NamePath.java",
        "gapic/src/service/com/google/gapid/service/snippets/AtomSnippets.java",
]

codergen(
    name = "codergen",
    generates = [
        "gapil/snippets/snippets_binary.go",
        "framework/binary/any/any_binary.go",
        "framework/binary/test/test_binary.go",
        "gapis/memory/memory_binary.go",
        "gapis/gfxapi/gles/gles_binary.go",
        "gapis/gfxapi/core/core_binary.go",
        "gapis/gfxapi/vulkan/vulkan_binary.go",
        "gapis/gfxapi/test/test_binary.go",
        "gapis/gfxapi/test/gfxapi_test_import/gfxapi_test_import_binary.go",
        "gapis/replay/protocol/protocol_binary.go",
        "gapis/resolve/resolve_binary_test.go",
        "gapis/atom/atom_binary.go",
        "gapis/atom/test/test_binary.go",
        "test/integration/replay/gles/gles_binary.go",
        "core/cc/coder/atom.cpp",
        "core/cc/coder/atom.h",
        "core/cc/coder/core.cpp",
        "core/cc/coder/core.h",
        "core/cc/coder/gles.cpp",
        "core/cc/coder/gles.h",
        "core/cc/coder/memory.cpp",
        "core/cc/coder/memory.h",
        "core/cc/coder/vulkan.cpp",
        "core/cc/coder/vulkan.h",
    ] + _JAVA_FILES,
    reads = [
        "core/data/id",
        "framework/binary",
        "gapis/gfxapi",
    ],
    signature = "signatures.txt",
)

filegroup(
    name = "java_coders",
    srcs = [":" + file for file in _JAVA_FILES],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "cc_coders",
    srcs = [
        ":core/cc/coder/atom.cpp",
        ":core/cc/coder/core.cpp",
        ":core/cc/coder/gles.cpp",
        ":core/cc/coder/memory.cpp",
        ":core/cc/coder/vulkan.cpp",
    ],
    hdrs = [
        ":core/cc/coder/atom.h",
        ":core/cc/coder/core.h",
        ":core/cc/coder/gles.h",
        ":core/cc/coder/memory.h",
        ":core/cc/coder/vulkan.h",
    ],
    deps = [
        "//core/cc",
    ],
    defines = cc_defines(),
    copts = cc_copts(),
    strip_include_prefix = "src/github.com/google/gapid",
    visibility = ["//visibility:public"],
)