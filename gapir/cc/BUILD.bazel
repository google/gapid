load("//tools/build:rules.bzl", "apic", "mm_library", "cc_copts", "cc_defines")

apic(
    name = "gles",
    api = "//gapis/api/gles:api",
    templates = [
        "//gapis/api/templates:specific_gfx_api.cpp",
        "//gapis/api/templates:specific_gfx_api.h",
    ]
)

apic(
    name = "vulkan",
    api = "//gapis/api/vulkan:api",
    templates = [
        "//gapis/api/templates:specific_gfx_api.cpp",
        "//gapis/api/templates:specific_gfx_api.h",
        "//gapis/api/templates:vulkan_gfx_api_extras",
    ]
)

filegroup(
    name = "headers",
    srcs = glob([
        "*.h",
        "*.inl",
    ]),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "api_lib",
    srcs = [":gles", ":vulkan", ":headers"],
    hdrs = [":gles", ":vulkan", ":headers"],
    deps = [
        "//core/cc",
        "//core/vulkan/vk_virtual_swapchain/cc",
    ],
    include_prefix = "gapir/cc",
    defines = cc_defines(),
    copts = cc_copts(),
)

mm_library(
    name = "darwin_renderer",
    srcs = glob(["osx/*.mm"]),
    defines = cc_defines(),
    deps = [":api_lib"],
)

cc_library(
    name = "gapir",
    srcs = glob(["*.cpp"], exclude = ["*_test.cpp"]) + select({
        "//tools/build:linux": glob(["linux/*.cpp"]),
        "//tools/build:darwin": glob(["osx/*.cpp"]),
        "//tools/build:windows": glob(["windows/*.cpp"]),
        # Android
        "//conditions:default": glob(["android/*.cpp"]),
    }),
    defines = cc_defines(),
    hdrs = [":headers"],
    deps = [":api_lib"] + select({
        "//tools/build:darwin": [":darwin_renderer"],
        "//conditions:default": [],
    }),
    copts = cc_copts(),
    linkopts = select({
        "//tools/build:linux": ["-ldl", "-lGL", "-lX11"],
        "//tools/build:darwin": ["-framework Cocoa", "-framework OpenGL"],
        "//tools/build:windows": [],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
)
