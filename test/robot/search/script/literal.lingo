// Copyright (C) 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package script

import (
	"strconv"

	"github.com/google/gapid/test/robot/lingo"
	"github.com/google/gapid/test/robot/search/query"
)

func literal(s *lingo.Scanner) (query.Builder, error) {
	if _, err := boolTrue(s); err == nil {
		return query.Bool(true), nil
	}
	if _, err := boolFalse(s); err == nil {
		return query.Bool(false), nil
	}
	if v, err := string_(s); err == nil {
		return query.String(string(v)), nil
	}
	if v, err := floatDigits(s); err == nil {
		if f, err := strconv.ParseFloat(string(v), 64); err == nil {
			return query.Double(f), nil
		}
	}
	if v, err := hexDigits(s); err == nil {
		if u, err := strconv.ParseUint(string(v), 0, 64); err == nil {
			return query.Unsigned(u), nil
		}
	}
	if v, err := intDigits(s); err == nil {
		if i, err := strconv.ParseInt(string(v), 0, 64); err == nil {
			return query.Signed(i), nil
		}
	}
	return query.Bool(false), s.Error(nil, "Expected literal")
}

func string_(s *lingo.Scanner) (constant, error) {
	quote(s)
	// TODO: handle escape sequences
	value := stringBody(s)
	quote(s)
	return value, nil
}
