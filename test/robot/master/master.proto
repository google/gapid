// Copyright (C) 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package master;
option go_package = "github.com/google/gapid/test/robot/master";

import "test/robot/search/search.proto";

// Satellite is the set of information the master knows about a connected
// satellite.
message Satellite {
  // Name is the name of the satellite for command targeting.
  // The name 'master' is reserved to refer to the master rather
  // than the satellites.
  // Names are assigned by the master on registry, and may be different
  // for the same server each time it registers.
  string name = 1;
  // Services is the set of services the satellite reported supporting.
  ServiceList services = 2;
}

// Shutdown is a command that is sent to satellites to stop and restart them.
message Shutdown {
  // Now controls whether the server is allowed to shutdown gracefully.
  bool now = 1;
  // Restart makes the server attempt to restart itself after it has shut down.
  bool restart = 2;
}

// Ping is a command used to verify from the send end that a streaming rpc is
// still open.
message Ping {
}

// Identify is a command that is sent to satellites to tell them their identity.
message Identify {
  // Restart makes the server attempt to restart itself after it has shut down.
  string name = 1;
}

// ServiceList is a report sent to the master to say what types of service
// a satellite supports.
message ServiceList {
  // Master indicates the satellite is actually a master.
  bool master = 1;
  // Worker indicates the satellite supports one or more worker devices.
  bool worker = 2;
  // Web indicates the satellite is running the web service client.
  bool web = 3;
}

// Command contains master to satellite messages.
message Command {
  oneof do {
    Ping Ping = 1;
    Identify Identify = 2;
    Shutdown Shutdown = 3;
  }
}

// Service is the api to the robot master controller.
service Service {
  // Orbit adds a satellite to the set being managed by the master.
  // It will stay connected until the report stream is closed.
  // The master will use the returned command stream to control the satellite.
  rpc Orbit(OrbitRequest) returns (stream Command) {
  };
  // Shutdown is called to ask the master to send shutdown requests to
  // satellites.
  rpc Shutdown(ShutdownRequest) returns (ShutdownResponse) {
  };
  // Search is used to find satellite servers that match the given query.
  rpc Search(search.Query) returns (stream Satellite) {
  };
}

message ShutdownRequest {
  // Shutdown hold the shutdown options.
  Shutdown shutdown = 1;
  // To holds the set of satellite servers to issue the shutdown
  // command to.
  // If the list is empty, the master broadcasts to all satellites,
  // and also itself.
  repeated string to = 2;
}

message ShutdownResponse {
}

message OrbitRequest {
  // The list of services that the orbitting satellite supports.
  ServiceList Services = 1;
}
