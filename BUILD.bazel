# Copyright (C) 2018 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@io_bazel_rules_go//go:def.bzl", "go_prefix")
load("@bazel_gazelle//:def.bzl", "gazelle")
load("//tools/build:rules.bzl", "copy", "copy_to")

go_prefix("github.com/google/gapid")

gazelle(
    name = "gazelle",
    mode = "fix",
)

# Alias meant to be used with 'bazel run <alias> -- <arguments>'.
alias(
    name = "gapid",
    actual = "//cmd/gapid",
)

alias(
    name = "gapis",
    actual = "//cmd/gapis",
)

alias(
    name = "gapir",
    actual = "//cmd/gapir/cc:gapir",
)

alias(
    name = "gapit",
    actual = "//cmd/gapit",
)

# Rules to build the expected installed structure for running
filegroup(
    name = "pkg",
    srcs = [
        ":pkg-lib",
        ":pkg-root",
        ":pkg-strings",
    ],
)

copy_to(
    name = "pkg-root",
    srcs = [
        "//cmd/gapid",
        "//cmd/gapir/cc:gapir",
        "//cmd/gapis",
        "//cmd/gapit",
        "//tools/build:build.properties",
    ] + select({
        "//tools/build:no-android": [],
        "//conditions:default": [
            "//gapidapk/android/apk:arm64-v8a.apk",
            "//gapidapk/android/apk:armeabi-v7a.apk",
            "//gapidapk/android/apk:x86.apk",
        ],
    }),
    rename = {
        "armeabi-v7a.apk": "gapid-armeabi.apk",
        "arm64-v8a.apk": "gapid-aarch64.apk",
        "x86.apk": "gapid-x86.apk",
    },
    to = "pkg",
)

copy_to(
    name = "pkg-lib",
    srcs = [
        "//core/vulkan/vk_virtual_swapchain/cc:json",
        "//core/vulkan/vk_virtual_swapchain/cc:libVkLayer_VirtualSwapchain",
        "//gapic:gapic_deploy.jar",
        "//gapii/cc:libgapii",
        "//gapii/vulkan/vk_graphics_spy/cc:json",
    ],
    rename = {
        "gapic_deploy.jar": "gapic.jar",
    },
    to = "pkg/lib",
)

copy_to(
    name = "pkg-strings",
    srcs = ["//gapis/messages:stb"],
    to = "pkg/strings",
)

test_suite(
    name = "tests",
    # bazel query --output label 'kind(".*_test rule", //...)'
    tests = [
        "//core/app/analytics:go_default_test",
        "//core/app/auth:go_default_xtest",
        "//core/app/benchmark:go_default_xtest",
        "//core/app/crash/reporting:go_default_test",
        "//core/app/flags:go_default_xtest",
        "//core/assert:go_default_xtest",
        "//core/cc:tests",
        "//core/codegen:go_default_test",
        "//core/codegen:go_default_xtest",
        "//core/context/keys:go_default_xtest",
        "//core/data:go_default_xtest",
        "//core/data/binary:go_default_xtest",
        "//core/data/compare:go_default_xtest",
        "//core/data/deep:go_default_xtest",
        "//core/data/dictionary:go_default_xtest",
        "//core/data/endian:go_default_xtest",
        "//core/data/generic:go_default_xtest",
        "//core/data/id:go_default_xtest",
        "//core/data/pack:go_default_xtest",
        "//core/data/slice:go_default_test",
        "//core/data/slice:go_default_xtest",
        "//core/event/task:go_default_xtest",
        "//core/fault:go_default_xtest",
        "//core/fault/stacktrace:go_default_xtest",
        "//core/fault/stacktrace/crunch:go_default_test",
        "//core/git:go_default_test",
        "//core/image:go_default_xtest",
        "//core/java/jdbg:go_default_xtest",
        "//core/java/jdwp:go_default_xtest",
        "//core/langsvr:go_default_xtest",
        "//core/log:go_default_xtest",
        "//core/math/f16:go_default_xtest",
        "//core/math/f32:go_default_xtest",
        "//core/math/f64:go_default_xtest",
        "//core/math/interval:go_default_test",
        "//core/math/sint:go_default_xtest",
        "//core/memory/arena:go_default_xtest",
        "//core/memory_tracker/cc:tests",
        "//core/net:go_default_test",
        "//core/net/grpcutil:go_default_xtest",
        "//core/os/android/adb:go_default_xtest",
        "//core/os/android/binaryxml:go_default_test",
        "//core/os/android/manifest:go_default_xtest",
        "//core/os/device:go_default_xtest",
        "//core/os/device/host:go_default_xtest",
        "//core/os/file:go_default_xtest",
        "//core/os/flock:go_default_test",
        "//core/os/shell:go_default_xtest",
        "//core/os/shell/stub:go_default_xtest",
        "//core/stream:go_default_xtest",
        "//core/stream/fmts:go_default_xtest",
        "//core/text:go_default_xtest",
        "//core/text/cases:go_default_test",
        "//core/text/parse:go_default_test",
        "//core/text/parse:go_default_xtest",
        "//gapil/analysis:go_default_xtest",
        "//gapil/compiler:go_default_xtest",
        "//gapil/compiler/mangling/c:go_default_xtest",
        "//gapil/compiler/mangling/ia64:go_default_xtest",
        "//gapil/compiler/plugins/encoder/test:go_default_test",
        "//gapil/fuzz:go_default_xtest",
        "//gapil/parser:go_default_xtest",
        "//gapil/resolver:go_default_xtest",
        "//gapil/runtime/cc:tests",
        "//gapil/semantic:go_default_xtest",
        "//gapil/template:go_default_test",
        "//gapil/validate:go_default_xtest",
        "//gapir/cc:tests",
        "//gapis/api:go_default_test",
        "//gapis/api:go_default_xtest",
        "//gapis/api/gles:go_default_xtest",
        "//gapis/api/test:go_default_test",
        "//gapis/api/transform:go_default_test",
        "//gapis/api/vulkan:go_default_test",
        "//gapis/capture:go_default_xtest",
        "//gapis/memory:go_default_test",
        "//gapis/replay/asm:go_default_test",
        "//gapis/replay/builder:go_default_test",
        "//gapis/replay/scheduler:go_default_test",
        "//gapis/resolve:go_default_test",
        "//gapis/resolve/dependencygraph:go_default_test",
        "//gapis/service/box:go_default_xtest",
        "//gapis/shadertools:go_default_xtest",
        "//gapis/shadertools/cc:tests",
        "//gapis/stringtable/minidown/parser:go_default_xtest",
        "//gapis/stringtable/minidown/scanner:go_default_xtest",
        "//gapis/stringtable/parser:go_default_test",
        "//gapis/vertex:go_default_xtest",
        "//test/integration/replay:go_default_test",
        "//test/integration/replay/gles:go_default_test",
        "//test/integration/service:go_default_xtest",
        "//test/robot/stash/grpc:go_default_xtest",
    ],
)
