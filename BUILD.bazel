load("@io_bazel_rules_go//go:def.bzl", "gazelle", "go_prefix")
load("//tools/build:rules.bzl", "copy", "copy_to")

go_prefix("github.com/google/gapid")

# Aliases for easy access
alias(
    name = "gapic",
    actual = "//gapic:gapic",
)

alias(
    name = "gapit",
    actual = "//cmd/gapit",
)

gazelle(
    name = "gazelle",
    mode = "fix",
)

# Rules to build the expected installed structure for running
filegroup(
    name = "install",
    srcs = [
        ":install-pkg",
        ":install-pkg-lib",
        ":install-pkg-strings",
    ],
)

copy_to(
    name = "install-pkg",
    srcs = [
        "//tools/build:build.properties",
        "//cmd/gapid",
        "//cmd/gapir/cc:gapir",
        "//cmd/gapis",
        "//cmd/gapit",
        "//gapidapk/android/apk:armeabi-v7a.apk",
        "//gapidapk/android/apk:arm64-v8a.apk",
        "//gapidapk/android/apk:x86.apk",
    ],
    rename = {
        "armeabi-v7a.apk": "gapid-armeabi.apk",
        "arm64-v8a.apk": "gapid-aarch64.apk",
        "x86.apk": "gapid-x86.apk",
    },
    to = "pkg",
)

copy_to(
    name = "install-pkg-lib",
    srcs = [
        "//core/vulkan/vk_virtual_swapchain/cc:cc",
        "//core/vulkan/vk_virtual_swapchain/cc:json",
        "//gapic:gapic_deploy.jar",
        "//gapii/vulkan/vk_graphics_spy/cc:json",
        "//gapii/cc:gapii",
    ],
    extensions = ["jar", "json", "so"],
    # Unfortunatly, no dict concatination support.
    rename = select({
        "//tools/build:darwin": {
            "gapic_deploy.jar": "gapic.jar",
            "libgapii.so": "libgapii.dylib",
            "libcc.so": "libVkLayer_VirtualSwapchain.dylib",
        },
        "//conditions:default": {
            "gapic_deploy.jar": "gapic.jar",
            "libcc.so": "libVkLayer_VirtualSwapchain.so",
        }
    }),
    to = "pkg/lib",
)

copy_to(
    name = "install-pkg-strings",
    srcs = ["//gapis/messages:stb"],
    to = "pkg/strings",
)

proto_library(
    name = "ptypes",
    srcs = glob(["google/protobuf/*.proto"]),
    visibility = ["//visibility:public"],
)
