{{/*
 * Copyright (C) 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */}}

{{/* ---- Includes ---- */}}
{{Include "cpp_common.tmpl"}}

{{/* ---- Overrides ---- */}}
{{Global "C++.StringTypeOverride" "gapil::String"}}

{{$filename := print (Global "API") "_types.cpp" }}
{{$ | Macro "Types" | Reflow 4 | Write $filename}}

{{define "Types"}}
  {{AssertType $ "API"}}
  {{Template "C++.Copyright"}}
¶
  #include "gapii/cc/{{Global "API"}}_types.h"
¶
  namespace gapii {«
  class CallObserver;
  {{range $c := $.Classes}}
    {{Template "DefineClassMethods" $c}}
  {{end}}
  {{Template "DeclareState" $}}
¶
  »} // namespace gapii
¶
{{end}}

{{/*
-------------------------------------------------------------------------------
  Emits the definition of member methods of a class.
-------------------------------------------------------------------------------
*/}}
{{define "DefineClassMethods"}}
  {{AssertType $ "Class"}}

  {{$serializable := not (GetAnnotation $ "noserialize")}}
  {{$name := Macro "C++.Type" $}}
  {{if len $.Fields}}
¶
    {{$name}}::{{$name}}(core::Arena* arena)»»
      {{$a := ForEach $.Fields "DeclareDefaultInitializer" | JoinWith "\n, "}}
      {{if $a}}: {{$a}}{{end}}
      ««§•{}
¶
    {{$name}}::{{$name}}(§»
      {{range $i, $f := $.Fields}}
        {{if $i}}, §{{end}}
        {{if (IsStaticArray (TypeOf $f))}}const §{{end}}
        {{Template "C++.Type" $f}} {{$f.Name}}§
      {{end}}
      «)»»
      {{$a := ForEach $.Fields "DeclareCopyInitializer" | JoinWith "\n, "}}
      {{if $a}}: {{$a}}{{end}}
      ««§•{}
  {{end}}
{{end}}


{{/*
-------------------------------------------------------------------------------
  Emits the definition for the API state.
-------------------------------------------------------------------------------
*/}}
{{define "DeclareState"}}
  {{AssertType $ "API"}}

  {{$name := print (Title (Global "API")) "State"}}

¶
  {{$name}}::{{$name}}(core::Arena* arena) »»
    {{range $i, $g := $.Globals}}
      {{if $i}}, {{else}}: {{end}}§
      {{$g.Name}}({{Macro "C++.Null" (TypeOf $g)}})§
    {{end}}
    ««§•{}
{{end}}


{{/*
-------------------------------------------------------------------------------
  Emits a default initializer for the field.
-------------------------------------------------------------------------------
*/}}
{{define "DeclareDefaultInitializer"}}
  {{if IsNil $.Default}}
    m{{$.Name}}({{Macro "C++.Null" (TypeOf $)}})
  {{else}}
    m{{$.Name}}({{Macro "C++.Read" $.Default}})
  {{end}}
{{end}}


{{/*
-------------------------------------------------------------------------------
  Emits a field copy initializer.
-------------------------------------------------------------------------------
*/}}
{{define "DeclareCopyInitializer"}}
  m{{$.Name}}({{$.Name}})
{{end}}
