{{/*
 * Copyright (C) 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */}}

{{Global "module" ""}}
{{Include "common.tmpl"}}
{{$ | Macro "api.proto" | NewReflow "    " | Write "api.proto"}}

{{define "api.proto"}}
  {{template "Proto.GeneratedHeader" (Global "OutputDir")}}

  option optimize_for = CODE_SIZE;

  {{range $c := AllCommands $}}
    {{Template "CommandEntry" $c}}
  {{end}}

  {{range $c := $.Classes}}
    {{if (GetAnnotation $c "serialize")}}{{Template "ClassEntry" $c}}{{end}}
  {{end}}

{{end}}


{{/*
-------------------------------------------------------------------------------
  Emits a type declaration and implementation for the specified command.
-------------------------------------------------------------------------------
*/}}
{{define "CommandEntry"}}
  {{AssertType $ "Function"}}
  {{$name := $.Name}}
  {{Global "ProtoID" 0}}
  {{if not (GetAnnotation $ "pfn")}}
    ¶
    // {{$name}} is the structure for serializing the parameters to the api command {{$.Name}}¶
    message {{$name}} {»¶
      sint64 thread = {{Inc "ProtoID"}};¶
      {{/* Reserve proto IDs up to 7 for future use */}}
      {{Global "ProtoID" 7}}
      {{range $p := $.CallParameters}}
        {{Template "Proto.Entry" "Param" $p "Type" (TypeOf $p)}}
      {{end}}
    «}¶
¶
    {{Global "ProtoID" 0}}
    {{if not (IsVoid $.Return.Type)}}
      // {{$name}}Call is the structure for serializing the call of the api command {{$.Name}}¶
      message {{$name}}Call {»¶
        {{Template "Proto.Entry" "Param" $.Return "Type" (TypeOf $.Return)}}
      «}¶
    {{end}}
  {{end}}
{{end}}


{{/*
-------------------------------------------------------------------------------
  Emits a type declaration and implementation for the specified class.
-------------------------------------------------------------------------------
*/}}
{{define "ClassEntry"}}
  {{$name := $.Name}}
  {{Global "ProtoID" 0}}
  ¶
  // {{$name}} is the structure for serializing the class {{$.Name}}¶
  message {{$name}} {»¶
    {{range $v := $.Fields}}
      {{Template "Proto.Entry" "Param" $v "Type" (TypeOf $v)}}
    {{end}}
  «}¶
  message {{$name}}_Reference {»¶
    sint64 ReferenceID = 1;¶
    {{$name}} Value = 2;¶
  «}¶
{{end}}


{{/*
-------------------------------------------------------------------------------
  Emits the proto type for the provided AST type or expression.
-------------------------------------------------------------------------------
*/}}
{{define "Proto.Type"}}
  {{if IsBool               $}}sint32
  {{else if IsInt           $}}sint64
  {{else if IsUint          $}}sint64
  {{else if IsChar          $}}sint32
  {{else if IsF32           $}}float
  {{else if IsF64           $}}double
  {{else if IsNumericType   $}}sint64 {{/* Must be after floats */}}
  {{else if IsString        $}}string
  {{else if IsEnum          $}}sint32
  {{else if IsPointer       $}}sint64
  {{else if IsReference     $}}{{$.To.Name}}_Reference
  {{else if IsSlice         $}}memory_pb.Slice
  {{else if IsClass         $}}{{$.Name}}
  {{else if IsPseudonym     $}}{{Template "Proto.Type" $.To}}
  {{else}}{{Error "macro Proto.Type called with unsupported type: %T" $}}
  {{end}}
{{end}}

{{/*
-------------------------------------------------------------------------------
  Emits the proto entry for the provided AST type or expression.
-------------------------------------------------------------------------------
*/}}
{{define "Proto.Entry"}}
  {{$name := $.Param.Name}}
  {{if IsPseudonym     $.Type}}{{Template "Proto.Entry" "Param" $.Param "Type" $.Type.To}}
  {{else if IsStaticArray   $.Type}}repeated {{Template "Proto.Entry" "Param" $.Param "Type" $.Type.ValueType}}
  {{else if IsMap           $.Type}}
    {{$entry := printf "%s_Map" $name}}
    message {{$entry}} {»¶
      sint64 ReferenceID = 1;¶
      repeated {{Template "Proto.Type" $.Type.ValueType}} Values = 2;¶
      repeated {{Template "Proto.Type" $.Type.KeyType}} Keys = 3;¶
    «}¶
    {{$entry}} {{$name}} = {{Inc "ProtoID"}};¶
  {{else}}{{Template "Proto.Type" $.Type}} {{$name}} = {{Inc "ProtoID"}};¶
  {{end}}
{{end}}

{{/*
-------------------------------------------------------------------------------
  Emits a comment stating that the file is automatically generated.
-------------------------------------------------------------------------------
*/}}
{{define "Proto.GeneratedHeader"}}
  §{{Copyright "generated" "apic"}}§¶
  syntax = "proto3";¶
  ¶
  package {{$}};¶
  // cc_package¶
  ¶
  import "gapis/memory/memory_pb/memory.proto";¶
  ¶
{{end}}




