{{/*
 * Copyright (C) 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */}}

{{/* ---- Includes ---- */}}
{{Include "api_classnames.tmpl"}}
{{Include "cpp_common.tmpl"    }}

{{/* ---- Overrides ---- */}}
{{Global "C++.EnumTypeOverride"   "uint32_t"}}
{{Global "C++.Statement.Override" "Statement"}}

{{Global "ApiIndex" $.Index}}

{{$filename := print (Global "API") "_spy_serialize.cpp" }}
{{Global "SpyName" (print (Title (Global "API")) "Spy")}}
{{$ | Macro "SpyCppSerialize" | Reflow 4 | Write $filename}}

{{define "SpyCppSerialize"}}
  {{AssertType $ "API"}}
  {{$spyname := Global "SpyName"}}

  {{template "C++.GeneratedHeader"}}
  #include "gapii/cc/{{Global "API"}}_spy.h"
  #include "gapii/cc/to_proto.h"
  #include "gapis/api/{{Global "API"}}/{{Global "API"}}_pb/api.pb.h"
  ¶
  namespace gapii «{
    {{Global "API"}}_pb::InitialState* {{$spyname}}::serializeState(CallObserver* observer, ToProtoContext& pbCtx) {
      // Globals

      auto out = new {{Global "API"}}_pb::InitialState();
      {{range $g := $.Globals}}
        {{Template "SerializeGlobal" $g}}
      {{end}}
      return out;
    }
  }
{{end}}


{{/*
-------------------------------------------------------------------------------
  Emits a single the C++ needed to serialize this global value
-------------------------------------------------------------------------------
*/}}
{{define "SerializeGlobal"}}
  {{AssertType $ "Global"}}
  {{if (GetAnnotation $ "serialize")}}
    {{Template "C++.SetProtoField" "Proto" "out->" "Prefix" "" "Name" $.Name "Type" $}}
  {{end}}
{{end}}
