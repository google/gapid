// Copyright (C) 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// OpenGL ES 3.1 data-types. See:
// https://www.khronos.org/registry/gles/specs/3.1/es_spec_3.1.pdf

type u8 GLboolean // Boolean value.
label GLboolean GL_FALSE = 0x00
label GLboolean GL_TRUE = 0x01

// type s8    GLbyte // 8 bit, signed, two's complement binary integer. (Currently unused)
type u8   GLubyte // 8 bit, unsigned binary integer.
type char GLchar // 8 bit character used for strings.
type s16  GLshort // 16 bit, signed, two's complement binary integer.
// type u16   GLushort // 16 bit, unsigned binary integer. (Currently unused)
type s32   GLint // 32 bit, signed, two's complement binary integer.
type u32   GLuint // 32 bit, unsigned binary integer.
type s64   GLint64 // 64 bit, signed, two's complement binary integer.
type s64   GLint64EXT // 64 bit, signed, two's complement binary integer.
type u64   GLuint64 // 64 bit, unsigned binary integer.
type u64   GLuint64EXT // 64 bit, unsigned binary integer.
type s32   GLfixed // 16.16 bits, signed, two's complement fixed-point integer.
type s32   GLsizei // 32 bit, signed binary integer used to represent sizes.
type s32   GLintptr // TODO: No API datatype to represent this type.
type s32   GLsizeiptr // TODO: No API datatype to represent this type.
type void* GLDEBUGPROC // void (*)(GLenum,GLenum,GLuint,GLenum,GLsizei,const GLchar*,const void*)
// type u16   GLhalf // 16 bit floating-point number encoded as a unsigned 16 bit integer. (Currently unused)
type f32  GLfloat // 32 bit floating-point number.
type f32  GLclampf // 32 bit floating-point value clamped to [0, 1]
type void GLvoid // Void type.
type s32  GLclampx // GLES 1.0 fixed point

@replay_custom_value
@replay_remap
type void* GLsync // Sync object handle.
