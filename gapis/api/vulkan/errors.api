// Copyright (C) 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Based off of the original vulkan.h header file which has the following
// license.

// Copyright (c) 2015 The Khronos Group Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and/or associated documentation files (the
// "Materials"), to deal in the Materials without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Materials, and to
// permit persons to whom the Materials are furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Materials.
//
// THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.

// TODO: Change to take message type once the error messages below are moved to
// en-us.stb.md.
extern void onVkError(any err)

sub void vkErrorInvalidInstance(VkInstance inst) {
  vkErrorInvalidHandle("VkInstance", as!u64(inst))
}

sub void vkErrorInvalidDevice(VkDevice dev) {
  vkErrorInvalidHandle("VkDevice", as!u64(dev))
}

sub void vkErrorInvalidImage(VkImage img) {
  vkErrorInvalidHandle("VkImage", as!u64(img))
}

sub void vkErrorInvalidQueue(VkQueue queue) {
  vkErrorInvalidHandle("VkQueue", as!u64(queue))
}

sub void vkErrorInvalidHandle(string handleType, u64 handle) {
  onVkError(new!ERR_INVALID_HANDLE(handleType: handleType, handle: handle))
  abort
}

sub void vkErrorNullPointer(string pointerType) {
  onVkError(new!ERR_NULL_POINTER(pointerType: pointerType))
  abort
}

sub void vkErrorUnrecognizedExtension(const char* name) {
  onVkError(new!ERR_UNRECOGNIZED_EXTENSION(name: as!string(name)))
  // Continue the mutation as this may not cause problem.
}


// TODO: Add the following classes to messages in messages/en-us.stb.md once
// the compilation conflict of importing messages.api is resolved.
class ERR_INVALID_HANDLE {
  string handleType
  u64    handle
}

class ERR_NULL_POINTER {
  string pointerType
}

class ERR_UNRECOGNIZED_EXTENSION {
  string name
}
