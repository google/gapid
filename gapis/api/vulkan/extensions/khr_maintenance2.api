// Copyright (C) 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Based off of the original vulkan.h header file which has the following
// license.

// Copyright (c) 2015 The Khronos Group Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and/or associated documentation files (the
// "Materials"), to deal in the Materials without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Materials, and to
// permit persons to whom the Materials are furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Materials.
//
// THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.

///////////////
// Bitfields //
///////////////

// Updated in api/bitfields.api

///////////
// Enums //
///////////

enum VkPointClippingBehaviorKHR: u32 {
    VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR       = 0,
    VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR = 1,
}

enum VkTessellationDomainOriginKHR: u32 {
    VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR = 0,
    VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR = 1,
}

/////////////
// Structs //
/////////////

@extension("VK_KHR_maintenance2")
@returnedchain
@structextends("VkPhysicalDeviceProperties2")
class VkPhysicalDevicePointClippingPropertiesKHR {
  @values(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES)
    VkStructureType            sType
    void*                      pNext
    VkPointClippingBehavior    pointClippingBehavior
}

@extension("VK_KHR_maintenance2")
@structextends("VkRenderPassCreateInfo")
class VkRenderPassInputAttachmentAspectCreateInfoKHR {
  @values(VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO)
    VkStructureType                            sType
    const void*                                pNext
    u32                                        aspectReferenceCount
  @len("aspectReferenceCount")
    const VkInputAttachmentAspectReference*    pAspectReferences
}

@extension("VK_KHR_maintenance2")
class VkInputAttachmentAspectReferenceKHR {
    u32                   subpass
    u32                   inputAttachmentIndex
    VkImageAspectFlags    aspectMask
}

@extension("VK_KHR_maintenance2")
@structextends("VkImageViewCreateInfo")
class VkImageViewUsageCreateInfoKHR {
  @values(VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO)
    VkStructureType      sType
    const void*          pNext
    VkImageUsageFlags    usage
}

@extension("VK_KHR_maintenance2")
@structextends("VkPipelineTessellationStateCreateInfo")
class VkPipelineTessellationDomainOriginStateCreateInfoKHR {
  @values(VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO)
    VkStructureType               sType
    const void*                   pNext
    VkTessellationDomainOrigin    domainOrigin
}
