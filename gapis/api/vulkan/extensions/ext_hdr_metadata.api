// Copyright (C) 2019 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Based off of the original vulkan.h header file which has the following
// license.

// Copyright (c) 2015 The Khronos Group Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and/or associated documentation files (the
// "Materials"), to deal in the Materials without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Materials, and to
// permit persons to whom the Materials are furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Materials.
//
// THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.

///////////////
// Constants //
///////////////

@extension("VK_EXT_hdr_metadata") define VK_EXT_HDR_METADATA_SPEC_VERSION   1
@extension("VK_EXT_hdr_metadata") define VK_EXT_HDR_METADATA_EXTENSION_NAME "VK_EXT_hdr_metadata"

@extension("VK_EXT_hdr_metadata")
class VkXYColorEXT {
    f32    x
    f32    y
}

@extension("VK_EXT_hdr_metadata")
class VkHdrMetadataEXT {
    VkStructureType    sType
    const void*        pNext
    VkXYColorEXT       displayPrimaryRed
    VkXYColorEXT       displayPrimaryGreen
    VkXYColorEXT       displayPrimaryBlue
    VkXYColorEXT       whitePoint
    f32                maxLuminance
    f32                minLuminance
    f32                maxContentLightLevel
    f32                maxFrameAverageLightLevel
}

@internal
class ExtHDRMetadata {
    VkXYColorEXT       displayPrimaryRed
    VkXYColorEXT       displayPrimaryGreen
    VkXYColorEXT       displayPrimaryBlue
    VkXYColorEXT       whitePoint
    f32                maxLuminance
    f32                minLuminance
    f32                maxContentLightLevel
    f32                maxFrameAverageLightLevel
}

@extension("VK_EXT_hdr_metadata")
@indirect("VkDevice")
cmd void vkSetHdrMetadataEXT(
    VkDevice                device,
    u32                     swapchainCount,
    const VkSwapchainKHR*   pSwapchains,
    const VkHdrMetadataEXT* pMetadata) {
  swapchains := pSwapchains[0:swapchainCount]
  metadata := pMetadata[0:swapchainCount]
  for i in (0 .. swapchainCount) {
    data := metadata[i]
    if !(swapchains[i] in Swapchains) { 
        vkErrorInvalidSwapchain(swapchains[i])
    } else {
        Swapchains[swapchains[i]].HDRMetadata =
            new!ExtHDRMetadata(
                data.displayPrimaryRed,
                data.displayPrimaryGreen,
                data.displayPrimaryBlue,
                data.whitePoint,
                data.maxLuminance,
                data.minLuminance,
                data.maxContentLightLevel,
                data.maxFrameAverageLightLevel
            )
    }
  }
}