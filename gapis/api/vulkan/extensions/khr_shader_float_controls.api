// Copyright (C) 2019 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Based off of the original vulkan.h header file which has the following
// license.

// Copyright (c) 2015 The Khronos Group Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and/or associated documentation files (the
// "Materials"), to deal in the Materials without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Materials, and to
// permit persons to whom the Materials are furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Materials.
//
// THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.

@extension("VK_KHR_shader_float_controls") define VK_KHR_SHADER_FLOAT_CONTROLS_SPEC_VERSION   1
@extension("VK_KHR_shader_float_controls") define VK_KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME "VK_KHR_shader_float_controls"

@extension("VK_KHR_shader_float_controls")
enum VkShaderFloatControlsIndependenceKHR : u32 {
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR = 0,
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR = 1,
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR = 2,
    VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM_KHR = 0x7FFFFFFF
}

@extension("VK_KHR_shader_float_controls")
class VkPhysicalDeviceFloatControlsPropertiesKHR {
    VkStructureType                         sType
    void*                                   pNext
    VkShaderFloatControlsIndependenceKHR    denormBehaviorIndependence
    VkShaderFloatControlsIndependenceKHR    roundingModeIndependence
    VkBool32                                shaderSignedZeroInfNanPreserveFloat16
    VkBool32                                shaderSignedZeroInfNanPreserveFloat32
    VkBool32                                shaderSignedZeroInfNanPreserveFloat64
    VkBool32                                shaderDenormPreserveFloat16
    VkBool32                                shaderDenormPreserveFloat32
    VkBool32                                shaderDenormPreserveFloat64
    VkBool32                                shaderDenormFlushToZeroFloat16
    VkBool32                                shaderDenormFlushToZeroFloat32
    VkBool32                                shaderDenormFlushToZeroFloat64
    VkBool32                                shaderRoundingModeRTEFloat16
    VkBool32                                shaderRoundingModeRTEFloat32
    VkBool32                                shaderRoundingModeRTEFloat64
    VkBool32                                shaderRoundingModeRTZFloat16
    VkBool32                                shaderRoundingModeRTZFloat32
    VkBool32                                shaderRoundingModeRTZFloat64
}

@extension("VK_KHR_shader_float_controls")
class PhysicalDeviceFloatControlsPropertiesKHR {
    VkShaderFloatControlsIndependenceKHR    DenormBehaviorIndependence
    VkShaderFloatControlsIndependenceKHR    RoundingModeIndependence
    VkBool32                                ShaderSignedZeroInfNanPreserveFloat16
    VkBool32                                ShaderSignedZeroInfNanPreserveFloat32
    VkBool32                                ShaderSignedZeroInfNanPreserveFloat64
    VkBool32                                ShaderDenormPreserveFloat16
    VkBool32                                ShaderDenormPreserveFloat32
    VkBool32                                ShaderDenormPreserveFloat64
    VkBool32                                ShaderDenormFlushToZeroFloat16
    VkBool32                                ShaderDenormFlushToZeroFloat32
    VkBool32                                ShaderDenormFlushToZeroFloat64
    VkBool32                                ShaderRoundingModeRTEFloat16
    VkBool32                                ShaderRoundingModeRTEFloat32
    VkBool32                                ShaderRoundingModeRTEFloat64
    VkBool32                                ShaderRoundingModeRTZFloat16
    VkBool32                                ShaderRoundingModeRTZFloat32
    VkBool32                                ShaderRoundingModeRTZFloat64
}
