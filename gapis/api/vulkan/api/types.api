// Copyright (C) 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Based off of the original vulkan.h header file which has the following
// license.

// Copyright (c) 2015 The Khronos Group Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and/or associated documentation files (the
// "Materials"), to deal in the Materials without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Materials, and to
// permit persons to whom the Materials are furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Materials.
//
// THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.

type u32 VkFlags
type u32 VkBool32
type u64 VkDeviceSize
type u32 VkSampleMask

/// Dispatchable handle types.
@replay_remap @dispatchHandle type size VkInstance
@replay_remap @dispatchHandle type size VkPhysicalDevice
@replay_remap @dispatchHandle type size VkDevice
@replay_remap @dispatchHandle type size VkQueue
@replay_remap @dispatchHandle type size VkCommandBuffer

/// Non dispatchable handle types.
@replay_remap @nonDispatchHandle type u64 VkSemaphore
@replay_remap @nonDispatchHandle type u64 VkFence
@replay_remap @nonDispatchHandle type u64 VkDeviceMemory
@replay_remap @nonDispatchHandle type u64 VkBuffer
@replay_remap @nonDispatchHandle type u64 VkImage
@replay_remap @nonDispatchHandle type u64 VkEvent
@replay_remap @nonDispatchHandle type u64 VkQueryPool
@replay_remap @nonDispatchHandle type u64 VkBufferView
@replay_remap @nonDispatchHandle type u64 VkImageView
@replay_remap @nonDispatchHandle type u64 VkShaderModule
@replay_remap @nonDispatchHandle type u64 VkPipelineCache
@replay_remap @nonDispatchHandle type u64 VkPipelineLayout
@replay_remap @nonDispatchHandle type u64 VkRenderPass
@replay_remap @nonDispatchHandle type u64 VkPipeline
@replay_remap @nonDispatchHandle type u64 VkDescriptorSetLayout
@replay_remap @nonDispatchHandle type u64 VkSampler
@replay_remap @nonDispatchHandle type u64 VkDescriptorPool
@replay_remap @nonDispatchHandle type u64 VkDescriptorSet
@replay_remap @nonDispatchHandle type u64 VkFramebuffer
@replay_remap @nonDispatchHandle type u64 VkCommandPool

// Custom replay values
@replay_custom_value type const VkAllocationCallbacks* AllocationCallbacks

// Vulkan 1.1 core
@replay_remap @nonDispatchHandle type u64 VkDescriptorUpdateTemplate
@replay_remap @nonDispatchHandle type u64 VkSamplerYcbcrConversion
