// Copyright (C) 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package vulkan

func primingFragSpv(outputFmt VkFormat) []uint32 {
	switch outputFmt {
	// color uint32
	case VkFormat_VK_FORMAT_R8_UINT,
		VkFormat_VK_FORMAT_R8G8_UINT,
		VkFormat_VK_FORMAT_R8G8B8_UINT,
		VkFormat_VK_FORMAT_R8G8B8A8_UINT,
		VkFormat_VK_FORMAT_B8G8R8_UINT,
		VkFormat_VK_FORMAT_B8G8R8A8_UINT,
		VkFormat_VK_FORMAT_R16_UINT,
		VkFormat_VK_FORMAT_R16G16_UINT,
		VkFormat_VK_FORMAT_R16G16B16_UINT,
		VkFormat_VK_FORMAT_R16G16B16A16_UINT,
		VkFormat_VK_FORMAT_R32_UINT,
		VkFormat_VK_FORMAT_R32G32_UINT,
		VkFormat_VK_FORMAT_R32G32B32_UINT,
		VkFormat_VK_FORMAT_R32G32B32A32_UINT,
		VkFormat_VK_FORMAT_A8B8G8R8_UINT_PACK32,
		VkFormat_VK_FORMAT_A2R10G10B10_UINT_PACK32,
		VkFormat_VK_FORMAT_A2B10G10R10_UINT_PACK32:
		/*
			#version 450
			precision highp int;
			layout(location = 0) out uvec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			void main() {
				out_color.r = subpassLoad(in_color).r;
				out_color.g = subpassLoad(in_color).g;
				out_color.b = subpassLoad(in_color).b;
				out_color.a = subpassLoad(in_color).a;
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000026,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000009,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00050005, 0x00000009, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x0000000c, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040047, 0x00000009,
			0x0000001e, 0x00000000, 0x00040047, 0x0000000c,
			0x00000022, 0x00000000, 0x00040047, 0x0000000c,
			0x00000021, 0x00000000, 0x00040047, 0x0000000c,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00040015,
			0x00000006, 0x00000020, 0x00000000, 0x00040017,
			0x00000007, 0x00000006, 0x00000004, 0x00040020,
			0x00000008, 0x00000003, 0x00000007, 0x0004003b,
			0x00000008, 0x00000009, 0x00000003, 0x00090019,
			0x0000000a, 0x00000006, 0x00000006, 0x00000000,
			0x00000000, 0x00000000, 0x00000002, 0x00000000,
			0x00040020, 0x0000000b, 0x00000000, 0x0000000a,
			0x0004003b, 0x0000000b, 0x0000000c, 0x00000000,
			0x00040015, 0x0000000e, 0x00000020, 0x00000001,
			0x0004002b, 0x0000000e, 0x0000000f, 0x00000000,
			0x00040017, 0x00000010, 0x0000000e, 0x00000002,
			0x0005002c, 0x00000010, 0x00000011, 0x0000000f,
			0x0000000f, 0x0004002b, 0x00000006, 0x00000013,
			0x00000000, 0x00040020, 0x00000015, 0x00000003,
			0x00000006, 0x0004002b, 0x00000006, 0x00000019,
			0x00000001, 0x0004002b, 0x00000006, 0x0000001e,
			0x00000002, 0x0004002b, 0x00000006, 0x00000023,
			0x00000003, 0x00050036, 0x00000002, 0x00000004,
			0x00000000, 0x00000003, 0x000200f8, 0x00000005,
			0x0004003d, 0x0000000a, 0x0000000d, 0x0000000c,
			0x00050062, 0x00000007, 0x00000012, 0x0000000d,
			0x00000011, 0x00050051, 0x00000006, 0x00000014,
			0x00000012, 0x00000000, 0x00050041, 0x00000015,
			0x00000016, 0x00000009, 0x00000013, 0x0003003e,
			0x00000016, 0x00000014, 0x0004003d, 0x0000000a,
			0x00000017, 0x0000000c, 0x00050062, 0x00000007,
			0x00000018, 0x00000017, 0x00000011, 0x00050051,
			0x00000006, 0x0000001a, 0x00000018, 0x00000001,
			0x00050041, 0x00000015, 0x0000001b, 0x00000009,
			0x00000019, 0x0003003e, 0x0000001b, 0x0000001a,
			0x0004003d, 0x0000000a, 0x0000001c, 0x0000000c,
			0x00050062, 0x00000007, 0x0000001d, 0x0000001c,
			0x00000011, 0x00050051, 0x00000006, 0x0000001f,
			0x0000001d, 0x00000002, 0x00050041, 0x00000015,
			0x00000020, 0x00000009, 0x0000001e, 0x0003003e,
			0x00000020, 0x0000001f, 0x0004003d, 0x0000000a,
			0x00000021, 0x0000000c, 0x00050062, 0x00000007,
			0x00000022, 0x00000021, 0x00000011, 0x00050051,
			0x00000006, 0x00000024, 0x00000022, 0x00000003,
			0x00050041, 0x00000015, 0x00000025, 0x00000009,
			0x00000023, 0x0003003e, 0x00000025, 0x00000024,
			0x000100fd, 0x00010038}

	// color sint32
	case VkFormat_VK_FORMAT_R8_SINT,
		VkFormat_VK_FORMAT_R8G8_SINT,
		VkFormat_VK_FORMAT_R8G8B8_SINT,
		VkFormat_VK_FORMAT_R8G8B8A8_SINT,
		VkFormat_VK_FORMAT_B8G8R8_SINT,
		VkFormat_VK_FORMAT_B8G8R8A8_SINT,
		VkFormat_VK_FORMAT_R16_SINT,
		VkFormat_VK_FORMAT_R16G16_SINT,
		VkFormat_VK_FORMAT_R16G16B16_SINT,
		VkFormat_VK_FORMAT_R16G16B16A16_SINT,
		VkFormat_VK_FORMAT_R32_SINT,
		VkFormat_VK_FORMAT_R32G32_SINT,
		VkFormat_VK_FORMAT_R32G32B32_SINT,
		VkFormat_VK_FORMAT_R32G32B32A32_SINT,
		VkFormat_VK_FORMAT_A8B8G8R8_SINT_PACK32,
		VkFormat_VK_FORMAT_A2R10G10B10_SINT_PACK32,
		VkFormat_VK_FORMAT_A2B10G10R10_SINT_PACK32:
		/*
			#version 450
			precision highp int;
			layout(location = 0) out ivec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			void main() {
				out_color.r = int(subpassLoad(in_color).r);
				out_color.g = int(subpassLoad(in_color).g);
				out_color.b = int(subpassLoad(in_color).b);
				out_color.a = int(subpassLoad(in_color).a);
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x0000002b,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000009,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00050005, 0x00000009, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x0000000d, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040047, 0x00000009,
			0x0000001e, 0x00000000, 0x00040047, 0x0000000d,
			0x00000022, 0x00000000, 0x00040047, 0x0000000d,
			0x00000021, 0x00000000, 0x00040047, 0x0000000d,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00040015,
			0x00000006, 0x00000020, 0x00000001, 0x00040017,
			0x00000007, 0x00000006, 0x00000004, 0x00040020,
			0x00000008, 0x00000003, 0x00000007, 0x0004003b,
			0x00000008, 0x00000009, 0x00000003, 0x00040015,
			0x0000000a, 0x00000020, 0x00000000, 0x00090019,
			0x0000000b, 0x0000000a, 0x00000006, 0x00000000,
			0x00000000, 0x00000000, 0x00000002, 0x00000000,
			0x00040020, 0x0000000c, 0x00000000, 0x0000000b,
			0x0004003b, 0x0000000c, 0x0000000d, 0x00000000,
			0x0004002b, 0x00000006, 0x0000000f, 0x00000000,
			0x00040017, 0x00000010, 0x00000006, 0x00000002,
			0x0005002c, 0x00000010, 0x00000011, 0x0000000f,
			0x0000000f, 0x00040017, 0x00000012, 0x0000000a,
			0x00000004, 0x0004002b, 0x0000000a, 0x00000014,
			0x00000000, 0x00040020, 0x00000017, 0x00000003,
			0x00000006, 0x0004002b, 0x0000000a, 0x0000001b,
			0x00000001, 0x0004002b, 0x0000000a, 0x00000021,
			0x00000002, 0x0004002b, 0x0000000a, 0x00000027,
			0x00000003, 0x00050036, 0x00000002, 0x00000004,
			0x00000000, 0x00000003, 0x000200f8, 0x00000005,
			0x0004003d, 0x0000000b, 0x0000000e, 0x0000000d,
			0x00050062, 0x00000012, 0x00000013, 0x0000000e,
			0x00000011, 0x00050051, 0x0000000a, 0x00000015,
			0x00000013, 0x00000000, 0x0004007c, 0x00000006,
			0x00000016, 0x00000015, 0x00050041, 0x00000017,
			0x00000018, 0x00000009, 0x00000014, 0x0003003e,
			0x00000018, 0x00000016, 0x0004003d, 0x0000000b,
			0x00000019, 0x0000000d, 0x00050062, 0x00000012,
			0x0000001a, 0x00000019, 0x00000011, 0x00050051,
			0x0000000a, 0x0000001c, 0x0000001a, 0x00000001,
			0x0004007c, 0x00000006, 0x0000001d, 0x0000001c,
			0x00050041, 0x00000017, 0x0000001e, 0x00000009,
			0x0000001b, 0x0003003e, 0x0000001e, 0x0000001d,
			0x0004003d, 0x0000000b, 0x0000001f, 0x0000000d,
			0x00050062, 0x00000012, 0x00000020, 0x0000001f,
			0x00000011, 0x00050051, 0x0000000a, 0x00000022,
			0x00000020, 0x00000002, 0x0004007c, 0x00000006,
			0x00000023, 0x00000022, 0x00050041, 0x00000017,
			0x00000024, 0x00000009, 0x00000021, 0x0003003e,
			0x00000024, 0x00000023, 0x0004003d, 0x0000000b,
			0x00000025, 0x0000000d, 0x00050062, 0x00000012,
			0x00000026, 0x00000025, 0x00000011, 0x00050051,
			0x0000000a, 0x00000028, 0x00000026, 0x00000003,
			0x0004007c, 0x00000006, 0x00000029, 0x00000028,
			0x00050041, 0x00000017, 0x0000002a, 0x00000009,
			0x00000027, 0x0003003e, 0x0000002a, 0x00000029,
			0x000100fd, 0x00010038}

	// color unorm8
	case VkFormat_VK_FORMAT_R8_UNORM,
		VkFormat_VK_FORMAT_R8G8_UNORM,
		VkFormat_VK_FORMAT_R8G8B8_UNORM,
		VkFormat_VK_FORMAT_R8G8B8A8_UNORM,
		VkFormat_VK_FORMAT_B8G8R8_UNORM,
		VkFormat_VK_FORMAT_B8G8R8A8_UNORM,
		VkFormat_VK_FORMAT_R8_SRGB,
		VkFormat_VK_FORMAT_R8G8_SRGB,
		VkFormat_VK_FORMAT_R8G8B8_SRGB,
		VkFormat_VK_FORMAT_R8G8B8A8_SRGB,
		VkFormat_VK_FORMAT_B8G8R8_SRGB,
		VkFormat_VK_FORMAT_B8G8R8A8_SRGB,
		VkFormat_VK_FORMAT_A8B8G8R8_UNORM_PACK32,
		VkFormat_VK_FORMAT_A8B8G8R8_SRGB_PACK32:
		/*
			#version 450
			precision highp int;
			precision highp float;
			layout(location = 0) out vec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			void main() {
				out_color.r = subpassLoad(in_color).r/255.0;
				out_color.g = subpassLoad(in_color).g/255.0;
				out_color.b = subpassLoad(in_color).b/255.0;
				out_color.a = subpassLoad(in_color).a/255.0;
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000031,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000009,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00050005, 0x00000009, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x0000000d, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040047, 0x00000009,
			0x0000001e, 0x00000000, 0x00040047, 0x0000000d,
			0x00000022, 0x00000000, 0x00040047, 0x0000000d,
			0x00000021, 0x00000000, 0x00040047, 0x0000000d,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00030016,
			0x00000006, 0x00000020, 0x00040017, 0x00000007,
			0x00000006, 0x00000004, 0x00040020, 0x00000008,
			0x00000003, 0x00000007, 0x0004003b, 0x00000008,
			0x00000009, 0x00000003, 0x00040015, 0x0000000a,
			0x00000020, 0x00000000, 0x00090019, 0x0000000b,
			0x0000000a, 0x00000006, 0x00000000, 0x00000000,
			0x00000000, 0x00000002, 0x00000000, 0x00040020,
			0x0000000c, 0x00000000, 0x0000000b, 0x0004003b,
			0x0000000c, 0x0000000d, 0x00000000, 0x00040015,
			0x0000000f, 0x00000020, 0x00000001, 0x0004002b,
			0x0000000f, 0x00000010, 0x00000000, 0x00040017,
			0x00000011, 0x0000000f, 0x00000002, 0x0005002c,
			0x00000011, 0x00000012, 0x00000010, 0x00000010,
			0x00040017, 0x00000013, 0x0000000a, 0x00000004,
			0x0004002b, 0x0000000a, 0x00000015, 0x00000000,
			0x0004002b, 0x00000006, 0x00000018, 0x437f0000,
			0x00040020, 0x0000001a, 0x00000003, 0x00000006,
			0x0004002b, 0x0000000a, 0x0000001e, 0x00000001,
			0x0004002b, 0x0000000a, 0x00000025, 0x00000002,
			0x0004002b, 0x0000000a, 0x0000002c, 0x00000003,
			0x00050036, 0x00000002, 0x00000004, 0x00000000,
			0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
			0x0000000b, 0x0000000e, 0x0000000d, 0x00050062,
			0x00000013, 0x00000014, 0x0000000e, 0x00000012,
			0x00050051, 0x0000000a, 0x00000016, 0x00000014,
			0x00000000, 0x00040070, 0x00000006, 0x00000017,
			0x00000016, 0x00050088, 0x00000006, 0x00000019,
			0x00000017, 0x00000018, 0x00050041, 0x0000001a,
			0x0000001b, 0x00000009, 0x00000015, 0x0003003e,
			0x0000001b, 0x00000019, 0x0004003d, 0x0000000b,
			0x0000001c, 0x0000000d, 0x00050062, 0x00000013,
			0x0000001d, 0x0000001c, 0x00000012, 0x00050051,
			0x0000000a, 0x0000001f, 0x0000001d, 0x00000001,
			0x00040070, 0x00000006, 0x00000020, 0x0000001f,
			0x00050088, 0x00000006, 0x00000021, 0x00000020,
			0x00000018, 0x00050041, 0x0000001a, 0x00000022,
			0x00000009, 0x0000001e, 0x0003003e, 0x00000022,
			0x00000021, 0x0004003d, 0x0000000b, 0x00000023,
			0x0000000d, 0x00050062, 0x00000013, 0x00000024,
			0x00000023, 0x00000012, 0x00050051, 0x0000000a,
			0x00000026, 0x00000024, 0x00000002, 0x00040070,
			0x00000006, 0x00000027, 0x00000026, 0x00050088,
			0x00000006, 0x00000028, 0x00000027, 0x00000018,
			0x00050041, 0x0000001a, 0x00000029, 0x00000009,
			0x00000025, 0x0003003e, 0x00000029, 0x00000028,
			0x0004003d, 0x0000000b, 0x0000002a, 0x0000000d,
			0x00050062, 0x00000013, 0x0000002b, 0x0000002a,
			0x00000012, 0x00050051, 0x0000000a, 0x0000002d,
			0x0000002b, 0x00000003, 0x00040070, 0x00000006,
			0x0000002e, 0x0000002d, 0x00050088, 0x00000006,
			0x0000002f, 0x0000002e, 0x00000018, 0x00050041,
			0x0000001a, 0x00000030, 0x00000009, 0x0000002c,
			0x0003003e, 0x00000030, 0x0000002f, 0x000100fd,
			0x00010038}

	// color unorm16
	case VkFormat_VK_FORMAT_R16_UNORM,
		VkFormat_VK_FORMAT_R16G16_UNORM,
		VkFormat_VK_FORMAT_R16G16B16_UNORM,
		VkFormat_VK_FORMAT_R16G16B16A16_UNORM:
		/*
			#version 450
			precision highp int;
			precision highp float;
			layout(location = 0) out vec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			void main() {
				out_color.r = subpassLoad(in_color).r/65535.0;
				out_color.g = subpassLoad(in_color).g/65535.0;
				out_color.b = subpassLoad(in_color).b/65535.0;
				out_color.a = subpassLoad(in_color).a/65535.0;
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000031,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000009,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00050005, 0x00000009, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x0000000d, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040047, 0x00000009,
			0x0000001e, 0x00000000, 0x00040047, 0x0000000d,
			0x00000022, 0x00000000, 0x00040047, 0x0000000d,
			0x00000021, 0x00000000, 0x00040047, 0x0000000d,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00030016,
			0x00000006, 0x00000020, 0x00040017, 0x00000007,
			0x00000006, 0x00000004, 0x00040020, 0x00000008,
			0x00000003, 0x00000007, 0x0004003b, 0x00000008,
			0x00000009, 0x00000003, 0x00040015, 0x0000000a,
			0x00000020, 0x00000000, 0x00090019, 0x0000000b,
			0x0000000a, 0x00000006, 0x00000000, 0x00000000,
			0x00000000, 0x00000002, 0x00000000, 0x00040020,
			0x0000000c, 0x00000000, 0x0000000b, 0x0004003b,
			0x0000000c, 0x0000000d, 0x00000000, 0x00040015,
			0x0000000f, 0x00000020, 0x00000001, 0x0004002b,
			0x0000000f, 0x00000010, 0x00000000, 0x00040017,
			0x00000011, 0x0000000f, 0x00000002, 0x0005002c,
			0x00000011, 0x00000012, 0x00000010, 0x00000010,
			0x00040017, 0x00000013, 0x0000000a, 0x00000004,
			0x0004002b, 0x0000000a, 0x00000015, 0x00000000,
			0x0004002b, 0x00000006, 0x00000018, 0x477fff00,
			0x00040020, 0x0000001a, 0x00000003, 0x00000006,
			0x0004002b, 0x0000000a, 0x0000001e, 0x00000001,
			0x0004002b, 0x0000000a, 0x00000025, 0x00000002,
			0x0004002b, 0x0000000a, 0x0000002c, 0x00000003,
			0x00050036, 0x00000002, 0x00000004, 0x00000000,
			0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
			0x0000000b, 0x0000000e, 0x0000000d, 0x00050062,
			0x00000013, 0x00000014, 0x0000000e, 0x00000012,
			0x00050051, 0x0000000a, 0x00000016, 0x00000014,
			0x00000000, 0x00040070, 0x00000006, 0x00000017,
			0x00000016, 0x00050088, 0x00000006, 0x00000019,
			0x00000017, 0x00000018, 0x00050041, 0x0000001a,
			0x0000001b, 0x00000009, 0x00000015, 0x0003003e,
			0x0000001b, 0x00000019, 0x0004003d, 0x0000000b,
			0x0000001c, 0x0000000d, 0x00050062, 0x00000013,
			0x0000001d, 0x0000001c, 0x00000012, 0x00050051,
			0x0000000a, 0x0000001f, 0x0000001d, 0x00000001,
			0x00040070, 0x00000006, 0x00000020, 0x0000001f,
			0x00050088, 0x00000006, 0x00000021, 0x00000020,
			0x00000018, 0x00050041, 0x0000001a, 0x00000022,
			0x00000009, 0x0000001e, 0x0003003e, 0x00000022,
			0x00000021, 0x0004003d, 0x0000000b, 0x00000023,
			0x0000000d, 0x00050062, 0x00000013, 0x00000024,
			0x00000023, 0x00000012, 0x00050051, 0x0000000a,
			0x00000026, 0x00000024, 0x00000002, 0x00040070,
			0x00000006, 0x00000027, 0x00000026, 0x00050088,
			0x00000006, 0x00000028, 0x00000027, 0x00000018,
			0x00050041, 0x0000001a, 0x00000029, 0x00000009,
			0x00000025, 0x0003003e, 0x00000029, 0x00000028,
			0x0004003d, 0x0000000b, 0x0000002a, 0x0000000d,
			0x00050062, 0x00000013, 0x0000002b, 0x0000002a,
			0x00000012, 0x00050051, 0x0000000a, 0x0000002d,
			0x0000002b, 0x00000003, 0x00040070, 0x00000006,
			0x0000002e, 0x0000002d, 0x00050088, 0x00000006,
			0x0000002f, 0x0000002e, 0x00000018, 0x00050041,
			0x0000001a, 0x00000030, 0x00000009, 0x0000002c,
			0x0003003e, 0x00000030, 0x0000002f, 0x000100fd,
			0x00010038}

	// color unorm4
	case VkFormat_VK_FORMAT_R4G4_UNORM_PACK8,
		VkFormat_VK_FORMAT_R4G4B4A4_UNORM_PACK16,
		VkFormat_VK_FORMAT_B4G4R4A4_UNORM_PACK16:
		/*
			#version 450
			precision highp int;
			precision highp float;
			layout(location = 0) out vec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			void main() {
				out_color.r = subpassLoad(in_color).r/15.0;
				out_color.g = subpassLoad(in_color).g/15.0;
				out_color.b = subpassLoad(in_color).b/15.0;
				out_color.a = subpassLoad(in_color).a/15.0;
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000031,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000009,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00050005, 0x00000009, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x0000000d, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040047, 0x00000009,
			0x0000001e, 0x00000000, 0x00040047, 0x0000000d,
			0x00000022, 0x00000000, 0x00040047, 0x0000000d,
			0x00000021, 0x00000000, 0x00040047, 0x0000000d,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00030016,
			0x00000006, 0x00000020, 0x00040017, 0x00000007,
			0x00000006, 0x00000004, 0x00040020, 0x00000008,
			0x00000003, 0x00000007, 0x0004003b, 0x00000008,
			0x00000009, 0x00000003, 0x00040015, 0x0000000a,
			0x00000020, 0x00000000, 0x00090019, 0x0000000b,
			0x0000000a, 0x00000006, 0x00000000, 0x00000000,
			0x00000000, 0x00000002, 0x00000000, 0x00040020,
			0x0000000c, 0x00000000, 0x0000000b, 0x0004003b,
			0x0000000c, 0x0000000d, 0x00000000, 0x00040015,
			0x0000000f, 0x00000020, 0x00000001, 0x0004002b,
			0x0000000f, 0x00000010, 0x00000000, 0x00040017,
			0x00000011, 0x0000000f, 0x00000002, 0x0005002c,
			0x00000011, 0x00000012, 0x00000010, 0x00000010,
			0x00040017, 0x00000013, 0x0000000a, 0x00000004,
			0x0004002b, 0x0000000a, 0x00000015, 0x00000000,
			0x0004002b, 0x00000006, 0x00000018, 0x41700000,
			0x00040020, 0x0000001a, 0x00000003, 0x00000006,
			0x0004002b, 0x0000000a, 0x0000001e, 0x00000001,
			0x0004002b, 0x0000000a, 0x00000025, 0x00000002,
			0x0004002b, 0x0000000a, 0x0000002c, 0x00000003,
			0x00050036, 0x00000002, 0x00000004, 0x00000000,
			0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
			0x0000000b, 0x0000000e, 0x0000000d, 0x00050062,
			0x00000013, 0x00000014, 0x0000000e, 0x00000012,
			0x00050051, 0x0000000a, 0x00000016, 0x00000014,
			0x00000000, 0x00040070, 0x00000006, 0x00000017,
			0x00000016, 0x00050088, 0x00000006, 0x00000019,
			0x00000017, 0x00000018, 0x00050041, 0x0000001a,
			0x0000001b, 0x00000009, 0x00000015, 0x0003003e,
			0x0000001b, 0x00000019, 0x0004003d, 0x0000000b,
			0x0000001c, 0x0000000d, 0x00050062, 0x00000013,
			0x0000001d, 0x0000001c, 0x00000012, 0x00050051,
			0x0000000a, 0x0000001f, 0x0000001d, 0x00000001,
			0x00040070, 0x00000006, 0x00000020, 0x0000001f,
			0x00050088, 0x00000006, 0x00000021, 0x00000020,
			0x00000018, 0x00050041, 0x0000001a, 0x00000022,
			0x00000009, 0x0000001e, 0x0003003e, 0x00000022,
			0x00000021, 0x0004003d, 0x0000000b, 0x00000023,
			0x0000000d, 0x00050062, 0x00000013, 0x00000024,
			0x00000023, 0x00000012, 0x00050051, 0x0000000a,
			0x00000026, 0x00000024, 0x00000002, 0x00040070,
			0x00000006, 0x00000027, 0x00000026, 0x00050088,
			0x00000006, 0x00000028, 0x00000027, 0x00000018,
			0x00050041, 0x0000001a, 0x00000029, 0x00000009,
			0x00000025, 0x0003003e, 0x00000029, 0x00000028,
			0x0004003d, 0x0000000b, 0x0000002a, 0x0000000d,
			0x00050062, 0x00000013, 0x0000002b, 0x0000002a,
			0x00000012, 0x00050051, 0x0000000a, 0x0000002d,
			0x0000002b, 0x00000003, 0x00040070, 0x00000006,
			0x0000002e, 0x0000002d, 0x00050088, 0x00000006,
			0x0000002f, 0x0000002e, 0x00000018, 0x00050041,
			0x0000001a, 0x00000030, 0x00000009, 0x0000002c,
			0x0003003e, 0x00000030, 0x0000002f, 0x000100fd,
			0x00010038}

	// color unorm r5g6b5
	case VkFormat_VK_FORMAT_R5G6B5_UNORM_PACK16,
		VkFormat_VK_FORMAT_B5G6R5_UNORM_PACK16:
		/*
			#version 450
			precision highp int;
			precision highp float;
			layout(location = 0) out vec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			void main() {
				out_color.r = subpassLoad(in_color).r/31.0;
				out_color.g = subpassLoad(in_color).g/63.0;
				out_color.b = subpassLoad(in_color).b/31.0;
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x0000002b,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000009,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00050005, 0x00000009, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x0000000d, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040047, 0x00000009,
			0x0000001e, 0x00000000, 0x00040047, 0x0000000d,
			0x00000022, 0x00000000, 0x00040047, 0x0000000d,
			0x00000021, 0x00000000, 0x00040047, 0x0000000d,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00030016,
			0x00000006, 0x00000020, 0x00040017, 0x00000007,
			0x00000006, 0x00000004, 0x00040020, 0x00000008,
			0x00000003, 0x00000007, 0x0004003b, 0x00000008,
			0x00000009, 0x00000003, 0x00040015, 0x0000000a,
			0x00000020, 0x00000000, 0x00090019, 0x0000000b,
			0x0000000a, 0x00000006, 0x00000000, 0x00000000,
			0x00000000, 0x00000002, 0x00000000, 0x00040020,
			0x0000000c, 0x00000000, 0x0000000b, 0x0004003b,
			0x0000000c, 0x0000000d, 0x00000000, 0x00040015,
			0x0000000f, 0x00000020, 0x00000001, 0x0004002b,
			0x0000000f, 0x00000010, 0x00000000, 0x00040017,
			0x00000011, 0x0000000f, 0x00000002, 0x0005002c,
			0x00000011, 0x00000012, 0x00000010, 0x00000010,
			0x00040017, 0x00000013, 0x0000000a, 0x00000004,
			0x0004002b, 0x0000000a, 0x00000015, 0x00000000,
			0x0004002b, 0x00000006, 0x00000018, 0x41f80000,
			0x00040020, 0x0000001a, 0x00000003, 0x00000006,
			0x0004002b, 0x0000000a, 0x0000001e, 0x00000001,
			0x0004002b, 0x00000006, 0x00000021, 0x427c0000,
			0x0004002b, 0x0000000a, 0x00000026, 0x00000002,
			0x00050036, 0x00000002, 0x00000004, 0x00000000,
			0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
			0x0000000b, 0x0000000e, 0x0000000d, 0x00050062,
			0x00000013, 0x00000014, 0x0000000e, 0x00000012,
			0x00050051, 0x0000000a, 0x00000016, 0x00000014,
			0x00000000, 0x00040070, 0x00000006, 0x00000017,
			0x00000016, 0x00050088, 0x00000006, 0x00000019,
			0x00000017, 0x00000018, 0x00050041, 0x0000001a,
			0x0000001b, 0x00000009, 0x00000015, 0x0003003e,
			0x0000001b, 0x00000019, 0x0004003d, 0x0000000b,
			0x0000001c, 0x0000000d, 0x00050062, 0x00000013,
			0x0000001d, 0x0000001c, 0x00000012, 0x00050051,
			0x0000000a, 0x0000001f, 0x0000001d, 0x00000001,
			0x00040070, 0x00000006, 0x00000020, 0x0000001f,
			0x00050088, 0x00000006, 0x00000022, 0x00000020,
			0x00000021, 0x00050041, 0x0000001a, 0x00000023,
			0x00000009, 0x0000001e, 0x0003003e, 0x00000023,
			0x00000022, 0x0004003d, 0x0000000b, 0x00000024,
			0x0000000d, 0x00050062, 0x00000013, 0x00000025,
			0x00000024, 0x00000012, 0x00050051, 0x0000000a,
			0x00000027, 0x00000025, 0x00000002, 0x00040070,
			0x00000006, 0x00000028, 0x00000027, 0x00050088,
			0x00000006, 0x00000029, 0x00000028, 0x00000018,
			0x00050041, 0x0000001a, 0x0000002a, 0x00000009,
			0x00000026, 0x0003003e, 0x0000002a, 0x00000029,
			0x000100fd, 0x00010038}

	// color unorm r5g5b5a1
	case VkFormat_VK_FORMAT_R5G5B5A1_UNORM_PACK16,
		VkFormat_VK_FORMAT_B5G5R5A1_UNORM_PACK16,
		VkFormat_VK_FORMAT_A1R5G5B5_UNORM_PACK16:
		/*
			#version 450
			precision highp int;
			precision highp float;
			layout(location = 0) out vec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			void main() {
				out_color.r = subpassLoad(in_color).r/31.0;
				out_color.g = subpassLoad(in_color).g/31.0;
				out_color.b = subpassLoad(in_color).b/31.0;
				out_color.a = subpassLoad(in_color).a/1.0;
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000032,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000009,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00050005, 0x00000009, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x0000000d, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040047, 0x00000009,
			0x0000001e, 0x00000000, 0x00040047, 0x0000000d,
			0x00000022, 0x00000000, 0x00040047, 0x0000000d,
			0x00000021, 0x00000000, 0x00040047, 0x0000000d,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00030016,
			0x00000006, 0x00000020, 0x00040017, 0x00000007,
			0x00000006, 0x00000004, 0x00040020, 0x00000008,
			0x00000003, 0x00000007, 0x0004003b, 0x00000008,
			0x00000009, 0x00000003, 0x00040015, 0x0000000a,
			0x00000020, 0x00000000, 0x00090019, 0x0000000b,
			0x0000000a, 0x00000006, 0x00000000, 0x00000000,
			0x00000000, 0x00000002, 0x00000000, 0x00040020,
			0x0000000c, 0x00000000, 0x0000000b, 0x0004003b,
			0x0000000c, 0x0000000d, 0x00000000, 0x00040015,
			0x0000000f, 0x00000020, 0x00000001, 0x0004002b,
			0x0000000f, 0x00000010, 0x00000000, 0x00040017,
			0x00000011, 0x0000000f, 0x00000002, 0x0005002c,
			0x00000011, 0x00000012, 0x00000010, 0x00000010,
			0x00040017, 0x00000013, 0x0000000a, 0x00000004,
			0x0004002b, 0x0000000a, 0x00000015, 0x00000000,
			0x0004002b, 0x00000006, 0x00000018, 0x41f80000,
			0x00040020, 0x0000001a, 0x00000003, 0x00000006,
			0x0004002b, 0x0000000a, 0x0000001e, 0x00000001,
			0x0004002b, 0x0000000a, 0x00000025, 0x00000002,
			0x0004002b, 0x0000000a, 0x0000002c, 0x00000003,
			0x0004002b, 0x00000006, 0x0000002f, 0x3f800000,
			0x00050036, 0x00000002, 0x00000004, 0x00000000,
			0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
			0x0000000b, 0x0000000e, 0x0000000d, 0x00050062,
			0x00000013, 0x00000014, 0x0000000e, 0x00000012,
			0x00050051, 0x0000000a, 0x00000016, 0x00000014,
			0x00000000, 0x00040070, 0x00000006, 0x00000017,
			0x00000016, 0x00050088, 0x00000006, 0x00000019,
			0x00000017, 0x00000018, 0x00050041, 0x0000001a,
			0x0000001b, 0x00000009, 0x00000015, 0x0003003e,
			0x0000001b, 0x00000019, 0x0004003d, 0x0000000b,
			0x0000001c, 0x0000000d, 0x00050062, 0x00000013,
			0x0000001d, 0x0000001c, 0x00000012, 0x00050051,
			0x0000000a, 0x0000001f, 0x0000001d, 0x00000001,
			0x00040070, 0x00000006, 0x00000020, 0x0000001f,
			0x00050088, 0x00000006, 0x00000021, 0x00000020,
			0x00000018, 0x00050041, 0x0000001a, 0x00000022,
			0x00000009, 0x0000001e, 0x0003003e, 0x00000022,
			0x00000021, 0x0004003d, 0x0000000b, 0x00000023,
			0x0000000d, 0x00050062, 0x00000013, 0x00000024,
			0x00000023, 0x00000012, 0x00050051, 0x0000000a,
			0x00000026, 0x00000024, 0x00000002, 0x00040070,
			0x00000006, 0x00000027, 0x00000026, 0x00050088,
			0x00000006, 0x00000028, 0x00000027, 0x00000018,
			0x00050041, 0x0000001a, 0x00000029, 0x00000009,
			0x00000025, 0x0003003e, 0x00000029, 0x00000028,
			0x0004003d, 0x0000000b, 0x0000002a, 0x0000000d,
			0x00050062, 0x00000013, 0x0000002b, 0x0000002a,
			0x00000012, 0x00050051, 0x0000000a, 0x0000002d,
			0x0000002b, 0x00000003, 0x00040070, 0x00000006,
			0x0000002e, 0x0000002d, 0x00050088, 0x00000006,
			0x00000030, 0x0000002e, 0x0000002f, 0x00050041,
			0x0000001a, 0x00000031, 0x00000009, 0x0000002c,
			0x0003003e, 0x00000031, 0x00000030, 0x000100fd,
			0x00010038}

	// color unorm a2r10g10b10
	case VkFormat_VK_FORMAT_A2R10G10B10_UNORM_PACK32,
		VkFormat_VK_FORMAT_A2B10G10R10_UNORM_PACK32:
		/*
			#version 450
			precision highp int;
			precision highp float;
			layout(location = 0) out vec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			void main() {
				out_color.r = subpassLoad(in_color).r/1023.0;
				out_color.g = subpassLoad(in_color).g/1023.0;
				out_color.b = subpassLoad(in_color).b/1023.0;
				out_color.a = subpassLoad(in_color).a/3.0;
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000032,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000009,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00050005, 0x00000009, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x0000000d, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040047, 0x00000009,
			0x0000001e, 0x00000000, 0x00040047, 0x0000000d,
			0x00000022, 0x00000000, 0x00040047, 0x0000000d,
			0x00000021, 0x00000000, 0x00040047, 0x0000000d,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00030016,
			0x00000006, 0x00000020, 0x00040017, 0x00000007,
			0x00000006, 0x00000004, 0x00040020, 0x00000008,
			0x00000003, 0x00000007, 0x0004003b, 0x00000008,
			0x00000009, 0x00000003, 0x00040015, 0x0000000a,
			0x00000020, 0x00000000, 0x00090019, 0x0000000b,
			0x0000000a, 0x00000006, 0x00000000, 0x00000000,
			0x00000000, 0x00000002, 0x00000000, 0x00040020,
			0x0000000c, 0x00000000, 0x0000000b, 0x0004003b,
			0x0000000c, 0x0000000d, 0x00000000, 0x00040015,
			0x0000000f, 0x00000020, 0x00000001, 0x0004002b,
			0x0000000f, 0x00000010, 0x00000000, 0x00040017,
			0x00000011, 0x0000000f, 0x00000002, 0x0005002c,
			0x00000011, 0x00000012, 0x00000010, 0x00000010,
			0x00040017, 0x00000013, 0x0000000a, 0x00000004,
			0x0004002b, 0x0000000a, 0x00000015, 0x00000000,
			0x0004002b, 0x00000006, 0x00000018, 0x447fc000,
			0x00040020, 0x0000001a, 0x00000003, 0x00000006,
			0x0004002b, 0x0000000a, 0x0000001e, 0x00000001,
			0x0004002b, 0x0000000a, 0x00000025, 0x00000002,
			0x0004002b, 0x0000000a, 0x0000002c, 0x00000003,
			0x0004002b, 0x00000006, 0x0000002f, 0x40400000,
			0x00050036, 0x00000002, 0x00000004, 0x00000000,
			0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
			0x0000000b, 0x0000000e, 0x0000000d, 0x00050062,
			0x00000013, 0x00000014, 0x0000000e, 0x00000012,
			0x00050051, 0x0000000a, 0x00000016, 0x00000014,
			0x00000000, 0x00040070, 0x00000006, 0x00000017,
			0x00000016, 0x00050088, 0x00000006, 0x00000019,
			0x00000017, 0x00000018, 0x00050041, 0x0000001a,
			0x0000001b, 0x00000009, 0x00000015, 0x0003003e,
			0x0000001b, 0x00000019, 0x0004003d, 0x0000000b,
			0x0000001c, 0x0000000d, 0x00050062, 0x00000013,
			0x0000001d, 0x0000001c, 0x00000012, 0x00050051,
			0x0000000a, 0x0000001f, 0x0000001d, 0x00000001,
			0x00040070, 0x00000006, 0x00000020, 0x0000001f,
			0x00050088, 0x00000006, 0x00000021, 0x00000020,
			0x00000018, 0x00050041, 0x0000001a, 0x00000022,
			0x00000009, 0x0000001e, 0x0003003e, 0x00000022,
			0x00000021, 0x0004003d, 0x0000000b, 0x00000023,
			0x0000000d, 0x00050062, 0x00000013, 0x00000024,
			0x00000023, 0x00000012, 0x00050051, 0x0000000a,
			0x00000026, 0x00000024, 0x00000002, 0x00040070,
			0x00000006, 0x00000027, 0x00000026, 0x00050088,
			0x00000006, 0x00000028, 0x00000027, 0x00000018,
			0x00050041, 0x0000001a, 0x00000029, 0x00000009,
			0x00000025, 0x0003003e, 0x00000029, 0x00000028,
			0x0004003d, 0x0000000b, 0x0000002a, 0x0000000d,
			0x00050062, 0x00000013, 0x0000002b, 0x0000002a,
			0x00000012, 0x00050051, 0x0000000a, 0x0000002d,
			0x0000002b, 0x00000003, 0x00040070, 0x00000006,
			0x0000002e, 0x0000002d, 0x00050088, 0x00000006,
			0x00000030, 0x0000002e, 0x0000002f, 0x00050041,
			0x0000001a, 0x00000031, 0x00000009, 0x0000002c,
			0x0003003e, 0x00000031, 0x00000030, 0x000100fd,
			0x00010038}

	// color snorm8
	case VkFormat_VK_FORMAT_R8_SNORM,
		VkFormat_VK_FORMAT_R8G8_SNORM,
		VkFormat_VK_FORMAT_R8G8B8_SNORM,
		VkFormat_VK_FORMAT_R8G8B8A8_SNORM,
		VkFormat_VK_FORMAT_B8G8R8_SNORM,
		VkFormat_VK_FORMAT_B8G8R8A8_SNORM,
		VkFormat_VK_FORMAT_A8B8G8R8_SNORM_PACK32:
		/*
			#version 450
			precision highp int;
			precision highp float;
			layout(location = 0) out vec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			float snorm(in uint u, in float d) {
				return (int(u) * 2.0  + 1.0) / d;
			}
			void main() {
				out_color.r = snorm(subpassLoad(in_color).r, 255.0);
				out_color.g = snorm(subpassLoad(in_color).g, 255.0);
				out_color.b = snorm(subpassLoad(in_color).b, 255.0);
				out_color.a = snorm(subpassLoad(in_color).a, 255.0);
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000047,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x0000001d,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00060005, 0x0000000d, 0x726f6e73, 0x3175286d,
			0x3b31663b, 0x00000000, 0x00030005, 0x0000000b,
			0x00000075, 0x00030005, 0x0000000c, 0x00000064,
			0x00050005, 0x0000001d, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x00000020, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040005, 0x00000028,
			0x61726170, 0x0000006d, 0x00040005, 0x0000002b,
			0x61726170, 0x0000006d, 0x00040005, 0x00000031,
			0x61726170, 0x0000006d, 0x00040005, 0x00000034,
			0x61726170, 0x0000006d, 0x00040005, 0x00000039,
			0x61726170, 0x0000006d, 0x00040005, 0x0000003c,
			0x61726170, 0x0000006d, 0x00040005, 0x00000041,
			0x61726170, 0x0000006d, 0x00040005, 0x00000044,
			0x61726170, 0x0000006d, 0x00040047, 0x0000001d,
			0x0000001e, 0x00000000, 0x00040047, 0x00000020,
			0x00000022, 0x00000000, 0x00040047, 0x00000020,
			0x00000021, 0x00000000, 0x00040047, 0x00000020,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00040015,
			0x00000006, 0x00000020, 0x00000000, 0x00040020,
			0x00000007, 0x00000007, 0x00000006, 0x00030016,
			0x00000008, 0x00000020, 0x00040020, 0x00000009,
			0x00000007, 0x00000008, 0x00050021, 0x0000000a,
			0x00000008, 0x00000007, 0x00000009, 0x00040015,
			0x00000010, 0x00000020, 0x00000001, 0x0004002b,
			0x00000008, 0x00000013, 0x40000000, 0x0004002b,
			0x00000008, 0x00000015, 0x3f800000, 0x00040017,
			0x0000001b, 0x00000008, 0x00000004, 0x00040020,
			0x0000001c, 0x00000003, 0x0000001b, 0x0004003b,
			0x0000001c, 0x0000001d, 0x00000003, 0x00090019,
			0x0000001e, 0x00000006, 0x00000006, 0x00000000,
			0x00000000, 0x00000000, 0x00000002, 0x00000000,
			0x00040020, 0x0000001f, 0x00000000, 0x0000001e,
			0x0004003b, 0x0000001f, 0x00000020, 0x00000000,
			0x0004002b, 0x00000010, 0x00000022, 0x00000000,
			0x00040017, 0x00000023, 0x00000010, 0x00000002,
			0x0005002c, 0x00000023, 0x00000024, 0x00000022,
			0x00000022, 0x00040017, 0x00000025, 0x00000006,
			0x00000004, 0x0004002b, 0x00000008, 0x00000027,
			0x437f0000, 0x0004002b, 0x00000006, 0x00000029,
			0x00000000, 0x00040020, 0x0000002d, 0x00000003,
			0x00000008, 0x0004002b, 0x00000006, 0x00000032,
			0x00000001, 0x0004002b, 0x00000006, 0x0000003a,
			0x00000002, 0x0004002b, 0x00000006, 0x00000042,
			0x00000003, 0x00050036, 0x00000002, 0x00000004,
			0x00000000, 0x00000003, 0x000200f8, 0x00000005,
			0x0004003b, 0x00000007, 0x00000028, 0x00000007,
			0x0004003b, 0x00000009, 0x0000002b, 0x00000007,
			0x0004003b, 0x00000007, 0x00000031, 0x00000007,
			0x0004003b, 0x00000009, 0x00000034, 0x00000007,
			0x0004003b, 0x00000007, 0x00000039, 0x00000007,
			0x0004003b, 0x00000009, 0x0000003c, 0x00000007,
			0x0004003b, 0x00000007, 0x00000041, 0x00000007,
			0x0004003b, 0x00000009, 0x00000044, 0x00000007,
			0x0004003d, 0x0000001e, 0x00000021, 0x00000020,
			0x00050062, 0x00000025, 0x00000026, 0x00000021,
			0x00000024, 0x00050051, 0x00000006, 0x0000002a,
			0x00000026, 0x00000000, 0x0003003e, 0x00000028,
			0x0000002a, 0x0003003e, 0x0000002b, 0x00000027,
			0x00060039, 0x00000008, 0x0000002c, 0x0000000d,
			0x00000028, 0x0000002b, 0x00050041, 0x0000002d,
			0x0000002e, 0x0000001d, 0x00000029, 0x0003003e,
			0x0000002e, 0x0000002c, 0x0004003d, 0x0000001e,
			0x0000002f, 0x00000020, 0x00050062, 0x00000025,
			0x00000030, 0x0000002f, 0x00000024, 0x00050051,
			0x00000006, 0x00000033, 0x00000030, 0x00000001,
			0x0003003e, 0x00000031, 0x00000033, 0x0003003e,
			0x00000034, 0x00000027, 0x00060039, 0x00000008,
			0x00000035, 0x0000000d, 0x00000031, 0x00000034,
			0x00050041, 0x0000002d, 0x00000036, 0x0000001d,
			0x00000032, 0x0003003e, 0x00000036, 0x00000035,
			0x0004003d, 0x0000001e, 0x00000037, 0x00000020,
			0x00050062, 0x00000025, 0x00000038, 0x00000037,
			0x00000024, 0x00050051, 0x00000006, 0x0000003b,
			0x00000038, 0x00000002, 0x0003003e, 0x00000039,
			0x0000003b, 0x0003003e, 0x0000003c, 0x00000027,
			0x00060039, 0x00000008, 0x0000003d, 0x0000000d,
			0x00000039, 0x0000003c, 0x00050041, 0x0000002d,
			0x0000003e, 0x0000001d, 0x0000003a, 0x0003003e,
			0x0000003e, 0x0000003d, 0x0004003d, 0x0000001e,
			0x0000003f, 0x00000020, 0x00050062, 0x00000025,
			0x00000040, 0x0000003f, 0x00000024, 0x00050051,
			0x00000006, 0x00000043, 0x00000040, 0x00000003,
			0x0003003e, 0x00000041, 0x00000043, 0x0003003e,
			0x00000044, 0x00000027, 0x00060039, 0x00000008,
			0x00000045, 0x0000000d, 0x00000041, 0x00000044,
			0x00050041, 0x0000002d, 0x00000046, 0x0000001d,
			0x00000042, 0x0003003e, 0x00000046, 0x00000045,
			0x000100fd, 0x00010038, 0x00050036, 0x00000008,
			0x0000000d, 0x00000000, 0x0000000a, 0x00030037,
			0x00000007, 0x0000000b, 0x00030037, 0x00000009,
			0x0000000c, 0x000200f8, 0x0000000e, 0x0004003d,
			0x00000006, 0x0000000f, 0x0000000b, 0x0004007c,
			0x00000010, 0x00000011, 0x0000000f, 0x0004006f,
			0x00000008, 0x00000012, 0x00000011, 0x00050085,
			0x00000008, 0x00000014, 0x00000012, 0x00000013,
			0x00050081, 0x00000008, 0x00000016, 0x00000014,
			0x00000015, 0x0004003d, 0x00000008, 0x00000017,
			0x0000000c, 0x00050088, 0x00000008, 0x00000018,
			0x00000016, 0x00000017, 0x000200fe, 0x00000018,
			0x00010038}

	// color snorm16
	case VkFormat_VK_FORMAT_R16_SNORM,
		VkFormat_VK_FORMAT_R16G16_SNORM,
		VkFormat_VK_FORMAT_R16G16B16_SNORM,
		VkFormat_VK_FORMAT_R16G16B16A16_SNORM:
		/*
			#version 450
			precision highp int;
			precision highp float;
			layout(location = 0) out vec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			float snorm(in uint u, in float d) {
				return (int(u) * 2.0  + 1.0) / d;
			}
			void main() {
				out_color.r = snorm(subpassLoad(in_color).r, 65535.0);
				out_color.g = snorm(subpassLoad(in_color).g, 65535.0);
				out_color.b = snorm(subpassLoad(in_color).b, 65535.0);
				out_color.a = snorm(subpassLoad(in_color).a, 65535.0);
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000047,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x0000001d,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00060005, 0x0000000d, 0x726f6e73, 0x3175286d,
			0x3b31663b, 0x00000000, 0x00030005, 0x0000000b,
			0x00000075, 0x00030005, 0x0000000c, 0x00000064,
			0x00050005, 0x0000001d, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x00000020, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040005, 0x00000028,
			0x61726170, 0x0000006d, 0x00040005, 0x0000002b,
			0x61726170, 0x0000006d, 0x00040005, 0x00000031,
			0x61726170, 0x0000006d, 0x00040005, 0x00000034,
			0x61726170, 0x0000006d, 0x00040005, 0x00000039,
			0x61726170, 0x0000006d, 0x00040005, 0x0000003c,
			0x61726170, 0x0000006d, 0x00040005, 0x00000041,
			0x61726170, 0x0000006d, 0x00040005, 0x00000044,
			0x61726170, 0x0000006d, 0x00040047, 0x0000001d,
			0x0000001e, 0x00000000, 0x00040047, 0x00000020,
			0x00000022, 0x00000000, 0x00040047, 0x00000020,
			0x00000021, 0x00000000, 0x00040047, 0x00000020,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00040015,
			0x00000006, 0x00000020, 0x00000000, 0x00040020,
			0x00000007, 0x00000007, 0x00000006, 0x00030016,
			0x00000008, 0x00000020, 0x00040020, 0x00000009,
			0x00000007, 0x00000008, 0x00050021, 0x0000000a,
			0x00000008, 0x00000007, 0x00000009, 0x00040015,
			0x00000010, 0x00000020, 0x00000001, 0x0004002b,
			0x00000008, 0x00000013, 0x40000000, 0x0004002b,
			0x00000008, 0x00000015, 0x3f800000, 0x00040017,
			0x0000001b, 0x00000008, 0x00000004, 0x00040020,
			0x0000001c, 0x00000003, 0x0000001b, 0x0004003b,
			0x0000001c, 0x0000001d, 0x00000003, 0x00090019,
			0x0000001e, 0x00000006, 0x00000006, 0x00000000,
			0x00000000, 0x00000000, 0x00000002, 0x00000000,
			0x00040020, 0x0000001f, 0x00000000, 0x0000001e,
			0x0004003b, 0x0000001f, 0x00000020, 0x00000000,
			0x0004002b, 0x00000010, 0x00000022, 0x00000000,
			0x00040017, 0x00000023, 0x00000010, 0x00000002,
			0x0005002c, 0x00000023, 0x00000024, 0x00000022,
			0x00000022, 0x00040017, 0x00000025, 0x00000006,
			0x00000004, 0x0004002b, 0x00000008, 0x00000027,
			0x477fff00, 0x0004002b, 0x00000006, 0x00000029,
			0x00000000, 0x00040020, 0x0000002d, 0x00000003,
			0x00000008, 0x0004002b, 0x00000006, 0x00000032,
			0x00000001, 0x0004002b, 0x00000006, 0x0000003a,
			0x00000002, 0x0004002b, 0x00000006, 0x00000042,
			0x00000003, 0x00050036, 0x00000002, 0x00000004,
			0x00000000, 0x00000003, 0x000200f8, 0x00000005,
			0x0004003b, 0x00000007, 0x00000028, 0x00000007,
			0x0004003b, 0x00000009, 0x0000002b, 0x00000007,
			0x0004003b, 0x00000007, 0x00000031, 0x00000007,
			0x0004003b, 0x00000009, 0x00000034, 0x00000007,
			0x0004003b, 0x00000007, 0x00000039, 0x00000007,
			0x0004003b, 0x00000009, 0x0000003c, 0x00000007,
			0x0004003b, 0x00000007, 0x00000041, 0x00000007,
			0x0004003b, 0x00000009, 0x00000044, 0x00000007,
			0x0004003d, 0x0000001e, 0x00000021, 0x00000020,
			0x00050062, 0x00000025, 0x00000026, 0x00000021,
			0x00000024, 0x00050051, 0x00000006, 0x0000002a,
			0x00000026, 0x00000000, 0x0003003e, 0x00000028,
			0x0000002a, 0x0003003e, 0x0000002b, 0x00000027,
			0x00060039, 0x00000008, 0x0000002c, 0x0000000d,
			0x00000028, 0x0000002b, 0x00050041, 0x0000002d,
			0x0000002e, 0x0000001d, 0x00000029, 0x0003003e,
			0x0000002e, 0x0000002c, 0x0004003d, 0x0000001e,
			0x0000002f, 0x00000020, 0x00050062, 0x00000025,
			0x00000030, 0x0000002f, 0x00000024, 0x00050051,
			0x00000006, 0x00000033, 0x00000030, 0x00000001,
			0x0003003e, 0x00000031, 0x00000033, 0x0003003e,
			0x00000034, 0x00000027, 0x00060039, 0x00000008,
			0x00000035, 0x0000000d, 0x00000031, 0x00000034,
			0x00050041, 0x0000002d, 0x00000036, 0x0000001d,
			0x00000032, 0x0003003e, 0x00000036, 0x00000035,
			0x0004003d, 0x0000001e, 0x00000037, 0x00000020,
			0x00050062, 0x00000025, 0x00000038, 0x00000037,
			0x00000024, 0x00050051, 0x00000006, 0x0000003b,
			0x00000038, 0x00000002, 0x0003003e, 0x00000039,
			0x0000003b, 0x0003003e, 0x0000003c, 0x00000027,
			0x00060039, 0x00000008, 0x0000003d, 0x0000000d,
			0x00000039, 0x0000003c, 0x00050041, 0x0000002d,
			0x0000003e, 0x0000001d, 0x0000003a, 0x0003003e,
			0x0000003e, 0x0000003d, 0x0004003d, 0x0000001e,
			0x0000003f, 0x00000020, 0x00050062, 0x00000025,
			0x00000040, 0x0000003f, 0x00000024, 0x00050051,
			0x00000006, 0x00000043, 0x00000040, 0x00000003,
			0x0003003e, 0x00000041, 0x00000043, 0x0003003e,
			0x00000044, 0x00000027, 0x00060039, 0x00000008,
			0x00000045, 0x0000000d, 0x00000041, 0x00000044,
			0x00050041, 0x0000002d, 0x00000046, 0x0000001d,
			0x00000042, 0x0003003e, 0x00000046, 0x00000045,
			0x000100fd, 0x00010038, 0x00050036, 0x00000008,
			0x0000000d, 0x00000000, 0x0000000a, 0x00030037,
			0x00000007, 0x0000000b, 0x00030037, 0x00000009,
			0x0000000c, 0x000200f8, 0x0000000e, 0x0004003d,
			0x00000006, 0x0000000f, 0x0000000b, 0x0004007c,
			0x00000010, 0x00000011, 0x0000000f, 0x0004006f,
			0x00000008, 0x00000012, 0x00000011, 0x00050085,
			0x00000008, 0x00000014, 0x00000012, 0x00000013,
			0x00050081, 0x00000008, 0x00000016, 0x00000014,
			0x00000015, 0x0004003d, 0x00000008, 0x00000017,
			0x0000000c, 0x00050088, 0x00000008, 0x00000018,
			0x00000016, 0x00000017, 0x000200fe, 0x00000018,
			0x00010038}

	// color snorm a2r10g10b10
	case VkFormat_VK_FORMAT_A2R10G10B10_SNORM_PACK32,
		VkFormat_VK_FORMAT_A2B10G10R10_SNORM_PACK32:
		/*
			#version 450
			precision highp int;
			precision highp float;
			layout(location = 0) out vec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			float snorm(in uint u, in float d) {
				return (int(u) * 2.0  + 1.0) / d;
			}
			void main() {
				out_color.r = snorm(subpassLoad(in_color).r, 1023.0);
				out_color.g = snorm(subpassLoad(in_color).g, 1023.0);
				out_color.b = snorm(subpassLoad(in_color).b, 1023.0);
				out_color.a = snorm(subpassLoad(in_color).a, 1.0);
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000047,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x0000001d,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00060005, 0x0000000d, 0x726f6e73, 0x3175286d,
			0x3b31663b, 0x00000000, 0x00030005, 0x0000000b,
			0x00000075, 0x00030005, 0x0000000c, 0x00000064,
			0x00050005, 0x0000001d, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x00000020, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040005, 0x00000028,
			0x61726170, 0x0000006d, 0x00040005, 0x0000002b,
			0x61726170, 0x0000006d, 0x00040005, 0x00000031,
			0x61726170, 0x0000006d, 0x00040005, 0x00000034,
			0x61726170, 0x0000006d, 0x00040005, 0x00000039,
			0x61726170, 0x0000006d, 0x00040005, 0x0000003c,
			0x61726170, 0x0000006d, 0x00040005, 0x00000041,
			0x61726170, 0x0000006d, 0x00040005, 0x00000044,
			0x61726170, 0x0000006d, 0x00040047, 0x0000001d,
			0x0000001e, 0x00000000, 0x00040047, 0x00000020,
			0x00000022, 0x00000000, 0x00040047, 0x00000020,
			0x00000021, 0x00000000, 0x00040047, 0x00000020,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00040015,
			0x00000006, 0x00000020, 0x00000000, 0x00040020,
			0x00000007, 0x00000007, 0x00000006, 0x00030016,
			0x00000008, 0x00000020, 0x00040020, 0x00000009,
			0x00000007, 0x00000008, 0x00050021, 0x0000000a,
			0x00000008, 0x00000007, 0x00000009, 0x00040015,
			0x00000010, 0x00000020, 0x00000001, 0x0004002b,
			0x00000008, 0x00000013, 0x40000000, 0x0004002b,
			0x00000008, 0x00000015, 0x3f800000, 0x00040017,
			0x0000001b, 0x00000008, 0x00000004, 0x00040020,
			0x0000001c, 0x00000003, 0x0000001b, 0x0004003b,
			0x0000001c, 0x0000001d, 0x00000003, 0x00090019,
			0x0000001e, 0x00000006, 0x00000006, 0x00000000,
			0x00000000, 0x00000000, 0x00000002, 0x00000000,
			0x00040020, 0x0000001f, 0x00000000, 0x0000001e,
			0x0004003b, 0x0000001f, 0x00000020, 0x00000000,
			0x0004002b, 0x00000010, 0x00000022, 0x00000000,
			0x00040017, 0x00000023, 0x00000010, 0x00000002,
			0x0005002c, 0x00000023, 0x00000024, 0x00000022,
			0x00000022, 0x00040017, 0x00000025, 0x00000006,
			0x00000004, 0x0004002b, 0x00000008, 0x00000027,
			0x447fc000, 0x0004002b, 0x00000006, 0x00000029,
			0x00000000, 0x00040020, 0x0000002d, 0x00000003,
			0x00000008, 0x0004002b, 0x00000006, 0x00000032,
			0x00000001, 0x0004002b, 0x00000006, 0x0000003a,
			0x00000002, 0x0004002b, 0x00000006, 0x00000042,
			0x00000003, 0x00050036, 0x00000002, 0x00000004,
			0x00000000, 0x00000003, 0x000200f8, 0x00000005,
			0x0004003b, 0x00000007, 0x00000028, 0x00000007,
			0x0004003b, 0x00000009, 0x0000002b, 0x00000007,
			0x0004003b, 0x00000007, 0x00000031, 0x00000007,
			0x0004003b, 0x00000009, 0x00000034, 0x00000007,
			0x0004003b, 0x00000007, 0x00000039, 0x00000007,
			0x0004003b, 0x00000009, 0x0000003c, 0x00000007,
			0x0004003b, 0x00000007, 0x00000041, 0x00000007,
			0x0004003b, 0x00000009, 0x00000044, 0x00000007,
			0x0004003d, 0x0000001e, 0x00000021, 0x00000020,
			0x00050062, 0x00000025, 0x00000026, 0x00000021,
			0x00000024, 0x00050051, 0x00000006, 0x0000002a,
			0x00000026, 0x00000000, 0x0003003e, 0x00000028,
			0x0000002a, 0x0003003e, 0x0000002b, 0x00000027,
			0x00060039, 0x00000008, 0x0000002c, 0x0000000d,
			0x00000028, 0x0000002b, 0x00050041, 0x0000002d,
			0x0000002e, 0x0000001d, 0x00000029, 0x0003003e,
			0x0000002e, 0x0000002c, 0x0004003d, 0x0000001e,
			0x0000002f, 0x00000020, 0x00050062, 0x00000025,
			0x00000030, 0x0000002f, 0x00000024, 0x00050051,
			0x00000006, 0x00000033, 0x00000030, 0x00000001,
			0x0003003e, 0x00000031, 0x00000033, 0x0003003e,
			0x00000034, 0x00000027, 0x00060039, 0x00000008,
			0x00000035, 0x0000000d, 0x00000031, 0x00000034,
			0x00050041, 0x0000002d, 0x00000036, 0x0000001d,
			0x00000032, 0x0003003e, 0x00000036, 0x00000035,
			0x0004003d, 0x0000001e, 0x00000037, 0x00000020,
			0x00050062, 0x00000025, 0x00000038, 0x00000037,
			0x00000024, 0x00050051, 0x00000006, 0x0000003b,
			0x00000038, 0x00000002, 0x0003003e, 0x00000039,
			0x0000003b, 0x0003003e, 0x0000003c, 0x00000027,
			0x00060039, 0x00000008, 0x0000003d, 0x0000000d,
			0x00000039, 0x0000003c, 0x00050041, 0x0000002d,
			0x0000003e, 0x0000001d, 0x0000003a, 0x0003003e,
			0x0000003e, 0x0000003d, 0x0004003d, 0x0000001e,
			0x0000003f, 0x00000020, 0x00050062, 0x00000025,
			0x00000040, 0x0000003f, 0x00000024, 0x00050051,
			0x00000006, 0x00000043, 0x00000040, 0x00000003,
			0x0003003e, 0x00000041, 0x00000043, 0x0003003e,
			0x00000044, 0x00000015, 0x00060039, 0x00000008,
			0x00000045, 0x0000000d, 0x00000041, 0x00000044,
			0x00050041, 0x0000002d, 0x00000046, 0x0000001d,
			0x00000042, 0x0003003e, 0x00000046, 0x00000045,
			0x000100fd, 0x00010038, 0x00050036, 0x00000008,
			0x0000000d, 0x00000000, 0x0000000a, 0x00030037,
			0x00000007, 0x0000000b, 0x00030037, 0x00000009,
			0x0000000c, 0x000200f8, 0x0000000e, 0x0004003d,
			0x00000006, 0x0000000f, 0x0000000b, 0x0004007c,
			0x00000010, 0x00000011, 0x0000000f, 0x0004006f,
			0x00000008, 0x00000012, 0x00000011, 0x00050085,
			0x00000008, 0x00000014, 0x00000012, 0x00000013,
			0x00050081, 0x00000008, 0x00000016, 0x00000014,
			0x00000015, 0x0004003d, 0x00000008, 0x00000017,
			0x0000000c, 0x00050088, 0x00000008, 0x00000018,
			0x00000016, 0x00000017, 0x000200fe, 0x00000018,
			0x00010038}

	// color float
	case VkFormat_VK_FORMAT_R16_SFLOAT,
		VkFormat_VK_FORMAT_R16G16_SFLOAT,
		VkFormat_VK_FORMAT_R16G16B16_SFLOAT,
		VkFormat_VK_FORMAT_R16G16B16A16_SFLOAT,
		VkFormat_VK_FORMAT_R32_SFLOAT,
		VkFormat_VK_FORMAT_R32G32_SFLOAT,
		VkFormat_VK_FORMAT_R32G32B32_SFLOAT,
		VkFormat_VK_FORMAT_R32G32B32A32_SFLOAT,
		VkFormat_VK_FORMAT_B10G11R11_UFLOAT_PACK32,
		VkFormat_VK_FORMAT_E5B9G9R9_UFLOAT_PACK32:

		/*
			#version 450
			precision highp int;
			precision highp float;
			layout(location = 0) out vec4 out_color;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_color;
			void main() {
				out_color.r = uintBitsToFloat(subpassLoad(in_color).r);
				out_color.g = uintBitsToFloat(subpassLoad(in_color).g);
				out_color.b = uintBitsToFloat(subpassLoad(in_color).b);
				out_color.a = uintBitsToFloat(subpassLoad(in_color).a);
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x0000002c,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000009,
			0x00030010, 0x00000004, 0x00000007, 0x00030003,
			0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
			0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
			0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
			0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
			0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
			0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
			0x00050005, 0x00000009, 0x5f74756f, 0x6f6c6f63,
			0x00000072, 0x00050005, 0x0000000d, 0x635f6e69,
			0x726f6c6f, 0x00000000, 0x00040047, 0x00000009,
			0x0000001e, 0x00000000, 0x00040047, 0x0000000d,
			0x00000022, 0x00000000, 0x00040047, 0x0000000d,
			0x00000021, 0x00000000, 0x00040047, 0x0000000d,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00030016,
			0x00000006, 0x00000020, 0x00040017, 0x00000007,
			0x00000006, 0x00000004, 0x00040020, 0x00000008,
			0x00000003, 0x00000007, 0x0004003b, 0x00000008,
			0x00000009, 0x00000003, 0x00040015, 0x0000000a,
			0x00000020, 0x00000000, 0x00090019, 0x0000000b,
			0x0000000a, 0x00000006, 0x00000000, 0x00000000,
			0x00000000, 0x00000002, 0x00000000, 0x00040020,
			0x0000000c, 0x00000000, 0x0000000b, 0x0004003b,
			0x0000000c, 0x0000000d, 0x00000000, 0x00040015,
			0x0000000f, 0x00000020, 0x00000001, 0x0004002b,
			0x0000000f, 0x00000010, 0x00000000, 0x00040017,
			0x00000011, 0x0000000f, 0x00000002, 0x0005002c,
			0x00000011, 0x00000012, 0x00000010, 0x00000010,
			0x00040017, 0x00000013, 0x0000000a, 0x00000004,
			0x0004002b, 0x0000000a, 0x00000015, 0x00000000,
			0x00040020, 0x00000018, 0x00000003, 0x00000006,
			0x0004002b, 0x0000000a, 0x0000001c, 0x00000001,
			0x0004002b, 0x0000000a, 0x00000022, 0x00000002,
			0x0004002b, 0x0000000a, 0x00000028, 0x00000003,
			0x00050036, 0x00000002, 0x00000004, 0x00000000,
			0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
			0x0000000b, 0x0000000e, 0x0000000d, 0x00050062,
			0x00000013, 0x00000014, 0x0000000e, 0x00000012,
			0x00050051, 0x0000000a, 0x00000016, 0x00000014,
			0x00000000, 0x0004007c, 0x00000006, 0x00000017,
			0x00000016, 0x00050041, 0x00000018, 0x00000019,
			0x00000009, 0x00000015, 0x0003003e, 0x00000019,
			0x00000017, 0x0004003d, 0x0000000b, 0x0000001a,
			0x0000000d, 0x00050062, 0x00000013, 0x0000001b,
			0x0000001a, 0x00000012, 0x00050051, 0x0000000a,
			0x0000001d, 0x0000001b, 0x00000001, 0x0004007c,
			0x00000006, 0x0000001e, 0x0000001d, 0x00050041,
			0x00000018, 0x0000001f, 0x00000009, 0x0000001c,
			0x0003003e, 0x0000001f, 0x0000001e, 0x0004003d,
			0x0000000b, 0x00000020, 0x0000000d, 0x00050062,
			0x00000013, 0x00000021, 0x00000020, 0x00000012,
			0x00050051, 0x0000000a, 0x00000023, 0x00000021,
			0x00000002, 0x0004007c, 0x00000006, 0x00000024,
			0x00000023, 0x00050041, 0x00000018, 0x00000025,
			0x00000009, 0x00000022, 0x0003003e, 0x00000025,
			0x00000024, 0x0004003d, 0x0000000b, 0x00000026,
			0x0000000d, 0x00050062, 0x00000013, 0x00000027,
			0x00000026, 0x00000012, 0x00050051, 0x0000000a,
			0x00000029, 0x00000027, 0x00000003, 0x0004007c,
			0x00000006, 0x0000002a, 0x00000029, 0x00050041,
			0x00000018, 0x0000002b, 0x00000009, 0x00000028,
			0x0003003e, 0x0000002b, 0x0000002a, 0x000100fd,
			0x00010038}

	// depth unorm16
	case VkFormat_VK_FORMAT_D16_UNORM,
		VkFormat_VK_FORMAT_D16_UNORM_S8_UINT:
		/*
			#version 450
			precision highp int;
			precision highp float;
			out float gl_FragDepth;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_depth;
			void main() {
				gl_FragDepth = subpassLoad(in_depth).r / 65535.0;
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000019,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000008,
			0x00030010, 0x00000004, 0x00000007, 0x00030010,
			0x00000004, 0x0000000c, 0x00030003, 0x00000002,
			0x000001c2, 0x000a0004, 0x475f4c47, 0x4c474f4f,
			0x70635f45, 0x74735f70, 0x5f656c79, 0x656e696c,
			0x7269645f, 0x69746365, 0x00006576, 0x00080004,
			0x475f4c47, 0x4c474f4f, 0x6e695f45, 0x64756c63,
			0x69645f65, 0x74636572, 0x00657669, 0x00040005,
			0x00000004, 0x6e69616d, 0x00000000, 0x00060005,
			0x00000008, 0x465f6c67, 0x44676172, 0x68747065,
			0x00000000, 0x00050005, 0x0000000c, 0x645f6e69,
			0x68747065, 0x00000000, 0x00040047, 0x00000008,
			0x0000000b, 0x00000016, 0x00040047, 0x0000000c,
			0x00000022, 0x00000000, 0x00040047, 0x0000000c,
			0x00000021, 0x00000000, 0x00040047, 0x0000000c,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00030016,
			0x00000006, 0x00000020, 0x00040020, 0x00000007,
			0x00000003, 0x00000006, 0x0004003b, 0x00000007,
			0x00000008, 0x00000003, 0x00040015, 0x00000009,
			0x00000020, 0x00000000, 0x00090019, 0x0000000a,
			0x00000009, 0x00000006, 0x00000000, 0x00000000,
			0x00000000, 0x00000002, 0x00000000, 0x00040020,
			0x0000000b, 0x00000000, 0x0000000a, 0x0004003b,
			0x0000000b, 0x0000000c, 0x00000000, 0x00040015,
			0x0000000e, 0x00000020, 0x00000001, 0x0004002b,
			0x0000000e, 0x0000000f, 0x00000000, 0x00040017,
			0x00000010, 0x0000000e, 0x00000002, 0x0005002c,
			0x00000010, 0x00000011, 0x0000000f, 0x0000000f,
			0x00040017, 0x00000012, 0x00000009, 0x00000004,
			0x0004002b, 0x00000009, 0x00000014, 0x00000000,
			0x0004002b, 0x00000006, 0x00000017, 0x477fff00,
			0x00050036, 0x00000002, 0x00000004, 0x00000000,
			0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
			0x0000000a, 0x0000000d, 0x0000000c, 0x00050062,
			0x00000012, 0x00000013, 0x0000000d, 0x00000011,
			0x00050051, 0x00000009, 0x00000015, 0x00000013,
			0x00000000, 0x00040070, 0x00000006, 0x00000016,
			0x00000015, 0x00050088, 0x00000006, 0x00000018,
			0x00000016, 0x00000017, 0x0003003e, 0x00000008,
			0x00000018, 0x000100fd, 0x00010038}

	// depth unorm24
	case VkFormat_VK_FORMAT_D24_UNORM_S8_UINT:
		/*
			#version 450
			precision highp int;
			precision highp float;
			out float gl_FragDepth;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_depth;
			void main() {
				gl_FragDepth = subpassLoad(in_depth).r / 16777215.0;
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000019,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000008,
			0x00030010, 0x00000004, 0x00000007, 0x00030010,
			0x00000004, 0x0000000c, 0x00030003, 0x00000002,
			0x000001c2, 0x000a0004, 0x475f4c47, 0x4c474f4f,
			0x70635f45, 0x74735f70, 0x5f656c79, 0x656e696c,
			0x7269645f, 0x69746365, 0x00006576, 0x00080004,
			0x475f4c47, 0x4c474f4f, 0x6e695f45, 0x64756c63,
			0x69645f65, 0x74636572, 0x00657669, 0x00040005,
			0x00000004, 0x6e69616d, 0x00000000, 0x00060005,
			0x00000008, 0x465f6c67, 0x44676172, 0x68747065,
			0x00000000, 0x00050005, 0x0000000c, 0x645f6e69,
			0x68747065, 0x00000000, 0x00040047, 0x00000008,
			0x0000000b, 0x00000016, 0x00040047, 0x0000000c,
			0x00000022, 0x00000000, 0x00040047, 0x0000000c,
			0x00000021, 0x00000000, 0x00040047, 0x0000000c,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00030016,
			0x00000006, 0x00000020, 0x00040020, 0x00000007,
			0x00000003, 0x00000006, 0x0004003b, 0x00000007,
			0x00000008, 0x00000003, 0x00040015, 0x00000009,
			0x00000020, 0x00000000, 0x00090019, 0x0000000a,
			0x00000009, 0x00000006, 0x00000000, 0x00000000,
			0x00000000, 0x00000002, 0x00000000, 0x00040020,
			0x0000000b, 0x00000000, 0x0000000a, 0x0004003b,
			0x0000000b, 0x0000000c, 0x00000000, 0x00040015,
			0x0000000e, 0x00000020, 0x00000001, 0x0004002b,
			0x0000000e, 0x0000000f, 0x00000000, 0x00040017,
			0x00000010, 0x0000000e, 0x00000002, 0x0005002c,
			0x00000010, 0x00000011, 0x0000000f, 0x0000000f,
			0x00040017, 0x00000012, 0x00000009, 0x00000004,
			0x0004002b, 0x00000009, 0x00000014, 0x00000000,
			0x0004002b, 0x00000006, 0x00000017, 0x4b7fffff,
			0x00050036, 0x00000002, 0x00000004, 0x00000000,
			0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
			0x0000000a, 0x0000000d, 0x0000000c, 0x00050062,
			0x00000012, 0x00000013, 0x0000000d, 0x00000011,
			0x00050051, 0x00000009, 0x00000015, 0x00000013,
			0x00000000, 0x00040070, 0x00000006, 0x00000016,
			0x00000015, 0x00050088, 0x00000006, 0x00000018,
			0x00000016, 0x00000017, 0x0003003e, 0x00000008,
			0x00000018, 0x000100fd, 0x00010038}

	// depth float
	case VkFormat_VK_FORMAT_D32_SFLOAT,
		VkFormat_VK_FORMAT_D32_SFLOAT_S8_UINT:
		/*
			#version 450
			precision highp int;
			precision highp float;
			out float gl_FragDepth;
			layout(input_attachment_index = 0, binding = 0, set = 0) uniform usubpassInput in_depth;
			void main() {
				gl_FragDepth = uintBitsToFloat(subpassLoad(in_depth).r);
			}
		*/
		return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x00000017,
			0x00000000, 0x00020011, 0x00000001, 0x00020011,
			0x00000028, 0x0006000b, 0x00000001, 0x4c534c47,
			0x6474732e, 0x3035342e, 0x00000000, 0x0003000e,
			0x00000000, 0x00000001, 0x0006000f, 0x00000004,
			0x00000004, 0x6e69616d, 0x00000000, 0x00000008,
			0x00030010, 0x00000004, 0x00000007, 0x00030010,
			0x00000004, 0x0000000c, 0x00030003, 0x00000002,
			0x000001c2, 0x000a0004, 0x475f4c47, 0x4c474f4f,
			0x70635f45, 0x74735f70, 0x5f656c79, 0x656e696c,
			0x7269645f, 0x69746365, 0x00006576, 0x00080004,
			0x475f4c47, 0x4c474f4f, 0x6e695f45, 0x64756c63,
			0x69645f65, 0x74636572, 0x00657669, 0x00040005,
			0x00000004, 0x6e69616d, 0x00000000, 0x00060005,
			0x00000008, 0x465f6c67, 0x44676172, 0x68747065,
			0x00000000, 0x00050005, 0x0000000c, 0x645f6e69,
			0x68747065, 0x00000000, 0x00040047, 0x00000008,
			0x0000000b, 0x00000016, 0x00040047, 0x0000000c,
			0x00000022, 0x00000000, 0x00040047, 0x0000000c,
			0x00000021, 0x00000000, 0x00040047, 0x0000000c,
			0x0000002b, 0x00000000, 0x00020013, 0x00000002,
			0x00030021, 0x00000003, 0x00000002, 0x00030016,
			0x00000006, 0x00000020, 0x00040020, 0x00000007,
			0x00000003, 0x00000006, 0x0004003b, 0x00000007,
			0x00000008, 0x00000003, 0x00040015, 0x00000009,
			0x00000020, 0x00000000, 0x00090019, 0x0000000a,
			0x00000009, 0x00000006, 0x00000000, 0x00000000,
			0x00000000, 0x00000002, 0x00000000, 0x00040020,
			0x0000000b, 0x00000000, 0x0000000a, 0x0004003b,
			0x0000000b, 0x0000000c, 0x00000000, 0x00040015,
			0x0000000e, 0x00000020, 0x00000001, 0x0004002b,
			0x0000000e, 0x0000000f, 0x00000000, 0x00040017,
			0x00000010, 0x0000000e, 0x00000002, 0x0005002c,
			0x00000010, 0x00000011, 0x0000000f, 0x0000000f,
			0x00040017, 0x00000012, 0x00000009, 0x00000004,
			0x0004002b, 0x00000009, 0x00000014, 0x00000000,
			0x00050036, 0x00000002, 0x00000004, 0x00000000,
			0x00000003, 0x000200f8, 0x00000005, 0x0004003d,
			0x0000000a, 0x0000000d, 0x0000000c, 0x00050062,
			0x00000012, 0x00000013, 0x0000000d, 0x00000011,
			0x00050051, 0x00000009, 0x00000015, 0x00000013,
			0x00000000, 0x0004007c, 0x00000006, 0x00000016,
			0x00000015, 0x0003003e, 0x00000008, 0x00000016,
			0x000100fd, 0x00010038}

	default:
		// unsupported format
		return []uint32{}
	}
}

func primingVertSpv() []uint32 {
	/*
		#version 450
		layout(location = 0) in vec3 position;
		void main() {
			gl_Position = vec4(position, 1.0);
		}
	*/
	return []uint32{0x07230203, 0x00010000, 0x000d0003, 0x0000001b,
		0x00000000, 0x00020011, 0x00000001, 0x0006000b,
		0x00000001, 0x4c534c47, 0x6474732e, 0x3035342e,
		0x00000000, 0x0003000e, 0x00000000, 0x00000001,
		0x0007000f, 0x00000000, 0x00000004, 0x6e69616d,
		0x00000000, 0x0000000d, 0x00000012, 0x00030003,
		0x00000002, 0x000001c2, 0x000a0004, 0x475f4c47,
		0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79,
		0x656e696c, 0x7269645f, 0x69746365, 0x00006576,
		0x00080004, 0x475f4c47, 0x4c474f4f, 0x6e695f45,
		0x64756c63, 0x69645f65, 0x74636572, 0x00657669,
		0x00040005, 0x00000004, 0x6e69616d, 0x00000000,
		0x00060005, 0x0000000b, 0x505f6c67, 0x65567265,
		0x78657472, 0x00000000, 0x00060006, 0x0000000b,
		0x00000000, 0x505f6c67, 0x7469736f, 0x006e6f69,
		0x00070006, 0x0000000b, 0x00000001, 0x505f6c67,
		0x746e696f, 0x657a6953, 0x00000000, 0x00070006,
		0x0000000b, 0x00000002, 0x435f6c67, 0x4470696c,
		0x61747369, 0x0065636e, 0x00070006, 0x0000000b,
		0x00000003, 0x435f6c67, 0x446c6c75, 0x61747369,
		0x0065636e, 0x00030005, 0x0000000d, 0x00000000,
		0x00050005, 0x00000012, 0x69736f70, 0x6e6f6974,
		0x00000000, 0x00050048, 0x0000000b, 0x00000000,
		0x0000000b, 0x00000000, 0x00050048, 0x0000000b,
		0x00000001, 0x0000000b, 0x00000001, 0x00050048,
		0x0000000b, 0x00000002, 0x0000000b, 0x00000003,
		0x00050048, 0x0000000b, 0x00000003, 0x0000000b,
		0x00000004, 0x00030047, 0x0000000b, 0x00000002,
		0x00040047, 0x00000012, 0x0000001e, 0x00000000,
		0x00020013, 0x00000002, 0x00030021, 0x00000003,
		0x00000002, 0x00030016, 0x00000006, 0x00000020,
		0x00040017, 0x00000007, 0x00000006, 0x00000004,
		0x00040015, 0x00000008, 0x00000020, 0x00000000,
		0x0004002b, 0x00000008, 0x00000009, 0x00000001,
		0x0004001c, 0x0000000a, 0x00000006, 0x00000009,
		0x0006001e, 0x0000000b, 0x00000007, 0x00000006,
		0x0000000a, 0x0000000a, 0x00040020, 0x0000000c,
		0x00000003, 0x0000000b, 0x0004003b, 0x0000000c,
		0x0000000d, 0x00000003, 0x00040015, 0x0000000e,
		0x00000020, 0x00000001, 0x0004002b, 0x0000000e,
		0x0000000f, 0x00000000, 0x00040017, 0x00000010,
		0x00000006, 0x00000003, 0x00040020, 0x00000011,
		0x00000001, 0x00000010, 0x0004003b, 0x00000011,
		0x00000012, 0x00000001, 0x0004002b, 0x00000006,
		0x00000014, 0x3f800000, 0x00040020, 0x00000019,
		0x00000003, 0x00000007, 0x00050036, 0x00000002,
		0x00000004, 0x00000000, 0x00000003, 0x000200f8,
		0x00000005, 0x0004003d, 0x00000010, 0x00000013,
		0x00000012, 0x00050051, 0x00000006, 0x00000015,
		0x00000013, 0x00000000, 0x00050051, 0x00000006,
		0x00000016, 0x00000013, 0x00000001, 0x00050051,
		0x00000006, 0x00000017, 0x00000013, 0x00000002,
		0x00070050, 0x00000007, 0x00000018, 0x00000015,
		0x00000016, 0x00000017, 0x00000014, 0x00050041,
		0x00000019, 0x0000001a, 0x0000000d, 0x0000000f,
		0x0003003e, 0x0000001a, 0x00000018, 0x000100fd,
		0x00010038}
}
